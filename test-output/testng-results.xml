<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="12" total="49" passed="37">
  <reporter-output>
    <line>
      <![CDATA[Test running on local environment]]>
    </line>
    <line>
      <![CDATA[Test running on local environment]]>
    </line>
    <line>
      <![CDATA[Platform - web
Browser - chrome]]>
    </line>
    <line>
      <![CDATA[Platform - web
Browser - chrome]]>
    </line>
    <line>
      <![CDATA[Test running on chrome browser]]>
    </line>
    <line>
      <![CDATA[Test running on chrome browser]]>
    </line>
    <line>
      <![CDATA[Test running on local environment]]>
    </line>
    <line>
      <![CDATA[Test running on local environment]]>
    </line>
    <line>
      <![CDATA[Platform - web
Browser - chrome]]>
    </line>
    <line>
      <![CDATA[Test running on chrome browser]]>
    </line>
    <line>
      <![CDATA[Test running on local environment]]>
    </line>
    <line>
      <![CDATA[Platform - web
Browser - chrome]]>
    </line>
    <line>
      <![CDATA[Test running on chrome browser]]>
    </line>
    <line>
      <![CDATA[Platform - web
Browser - chrome]]>
    </line>
    <line>
      <![CDATA[Test running on chrome browser]]>
    </line>
    <line>
      <![CDATA[
***** STARTING TEST: POLITICOSTATES_CMS_CREATE_CORE_USER_TESTS *****

Launching browser /chrome/ against starting URL: http://smoke-jenkins.ops.politico.com/cms]]>
    </line>
    <line>
      <![CDATA[
***** STARTING TEST: POLITICOSTATES_CONTENT_ARTICLE_TESTS *****

Launching browser /chrome/ against starting URL: http://smoke-jenkins.ops.politico.com/cms]]>
    </line>
    <line>
      <![CDATA[
***** STARTING TEST: POLITICOSTATES_FE_LICENSES_TESTS *****

Launching browser /chrome/ against starting URL: http://pro-smoke-jenkins.ops.politico.com/?fm=t]]>
    </line>
    <line>
      <![CDATA[
***** STARTING TEST: POLITICOSTATES_CONTENT_WHITEBOARD_TESTS *****

Launching browser /chrome/ against starting URL: http://smoke-jenkins.ops.politico.com/cms]]>
    </line>
    <line>
      <![CDATA[
***** STARTING TEST: POLITICOSTATES_CONTENT_NEWSLETTER_ENTRY *****

Launching browser /chrome/ against starting URL: http://smoke-jenkins.ops.politico.com/cms]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST001_POLITICOPRO_CLICKONLOGINNAVIGATESTOPOLITICOPROLANDINGPAGE *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST001_LOGIN *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[  [info] root/root]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST001_LOGIN *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[  [info] root/root]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST001_LOGIN *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[  [info] root/root]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST001_LOGIN *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[  [info] root/root]]>
    </line>
    <line>
      <![CDATA[[PASSED] element inp_username is displayed.]]>
    </line>
    <line>
      <![CDATA[  [info] Entered CMS User credentials: root / root]]>
    </line>
    <line>
      <![CDATA[[PASSED] element inp_username is displayed.]]>
    </line>
    <line>
      <![CDATA[  [info] Clicked Login Button]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST002_LAUNCH_NEWSLETTER_ENTRY_CREATION_WINDOW *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[  [info] Entered CMS User credentials: root / root]]>
    </line>
    <line>
      <![CDATA[[PASSED] Successfully switched to site: States]]>
    </line>
    <line>
      <![CDATA[[PASSED] element link_ContentType with text 'Newsletter Entry' is displayed.]]>
    </line>
    <line>
      <![CDATA[[PASSED] element inp_username is displayed.]]>
    </line>
    <line>
      <![CDATA[  [info] Entered CMS User credentials: root / root]]>
    </line>
    <line>
      <![CDATA[[PASSED] element inp_username is displayed.]]>
    </line>
    <line>
      <![CDATA[  [info] Entered CMS User credentials: root / root]]>
    </line>
    <line>
      <![CDATA[  [info] Clicked Login Button]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST002_SWITCH_TO_STATES_SITE *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[[PASSED] Successfully switched to site: States]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST003_LAUNCH_ACCOUNTMANAGEMENT_WINDOW *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[  [info] No Javascript Alert was found]]>
    </line>
    <line>
      <![CDATA[  [info] Clicked Login Button]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST002_LAUNCH_WHITEBOARD_CREATION_WINDOW *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[[PASSED] Successfully switched to site: States]]>
    </line>
    <line>
      <![CDATA[  [info] Clicked Login Button]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST002_LAUNCH_ARTICLE_CREATION_WINDOW *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[[PASSED] element link_ContentType with text 'Whiteboard' is displayed.]]>
    </line>
    <line>
      <![CDATA[  [info] No Javascript Alert was found]]>
    </line>
    <line>
      <![CDATA[[PASSED] Successfully switched to site: States]]>
    </line>
    <line>
      <![CDATA[[PASSED] element link_ContentType with text 'Article' is displayed.]]>
    </line>
    <line>
      <![CDATA[  [info] Launched the 'NEWSLETTER ENTRY' Page]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST005_CREATING_NEWSLETTER_ENTRY *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[  [info] User is already on Pro Login Page !!]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST004_LAUNCH_CREATE_USER_WINDOW *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[  [info] Entered Headline !!]]>
    </line>
    <line>
      <![CDATA[  [info] Launched the 'WHITEBOARD' Page]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST005_CREATING_WHITEBOARD *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST005_FILL_USER_DETAILS *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[Entered Email 'qatest_states@politico.com' !! ]]>
    </line>
    <line>
      <![CDATA[  [info] Scrolled to top]]>
    </line>
    <line>
      <![CDATA[Entered Password '123456' !! ]]>
    </line>
    <line>
      <![CDATA[[PASSED] Clicked MAIN tab !!]]>
    </line>
    <line>
      <![CDATA[  [info] Launched the 'ARTICLE' Page]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST005_CREATING_AND_PUBLISHING_ARTICLE *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[  [info] Entered Headline !!]]>
    </line>
    <line>
      <![CDATA[  [info] Element [[ChromeDriver: chrome on XP (ec4e3d12b17733afe24fd870a7562941)] -> css selector: div[class='inputSmall']>input[name*='isTester'][type='checkbox' ]] could not be clicked! unknown error: Element <input id="i1e7fdf1f5d764967b95c44fc251ed2dd" name="00000162-fd9d-da8d-a7fb-ff9d51280000/isTester" type="checkbox" value="true"> is not clickable at point (195, 9). Other element would receive the click: <div class="toolHeader toolHeader-hasEnvironment">...</div>
  (Session info: chrome=66.0.3359.117)
  (Driver info: chromedriver=2.36.540470 (e522d04694c7ebea4ba8821272dbef4f9b818c91),platform=Windows NT 6.3.9600 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.10.0', revision: '176b4a9', time: '2018-03-02T19:03:16.397Z'
System info: host: 'DLLA1439', ip: '10.90.0.51', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_161'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.36.540470 (e522d04694c7eb..., userDataDir: C:\Users\SHWETA~1\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 66.0.3359.117, webStorageEnabled: true}
Session ID: ec4e3d12b17733afe24fd870a7562941]]>
    </line>
    <line>
      <![CDATA[[PASSED] Newsletter is selected successfully !!]]>
    </line>
    <line>
      <![CDATA[  [info] No Javascript Alert was found]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST006_VERIFY_CREATION_OF_USER_THROUGH_FRONTEND *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[
***** STARTING TEST: POLITICOSTATES_CMS_CREATE_CORE_USER_TESTS *****

Launching browser /chrome/ against starting URL: http://smoke-jenkins.ops.politico.com]]>
    </line>
    <line>
      <![CDATA[  [info] No Javascript Alert was found]]>
    </line>
    <line>
      <![CDATA[  [info] Scrolled to top]]>
    </line>
    <line>
      <![CDATA[[PASSED] Clicked MAIN tab !!]]>
    </line>
    <line>
      <![CDATA[[PASSED] Contributor is successfully selected]]>
    </line>
    <line>
      <![CDATA[Clicked Submit button successfully !!]]>
    </line>
    <line>
      <![CDATA[[PASSED] Contributor is successfully selected]]>
    </line>
    <line>
      <![CDATA[[PASSED] Selected New Jersey as the Policy Vertical]]>
    </line>
    <line>
      <![CDATA[[PASSED] element text_loggedProUser_Name is displayed.]]>
    </line>
    <line>
      <![CDATA[[PASSED]: User has successfully logged into Politico Pro !! ]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST002_VERIFY_STATELICENSES_ARE_VISIBLE_UNDERSTATENEWS *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[[PASSED] Selected New Jersey as the Policy Vertical]]>
    </line>
    <line>
      <![CDATA[  [info] Opened Hamburger Menu !!]]>
    </line>
    <line>
      <![CDATA[[PASSED] Contributor is successfully selected]]>
    </line>
    <line>
      <![CDATA[[PASSED] Clicked LogIn link on the Hamburger Menu !!]]>
    </line>
    <line>
      <![CDATA[  [info] Scrolled to top]]>
    </line>
    <line>
      <![CDATA[[PASSED] PageTitle for Politico Login contains: 'Politico Login']]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST006_SAVE_BEFORE_PUBLISH_NEWSLETTER_ENTRY *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[  [info] Added Local Tag to the Tag Page !!]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST006_SAVE_BEFORE_PUBLISH_WHITEBOARD *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[[PASSED] Selected New Jersey as the Policy Vertical]]>
    </line>
    <line>
      <![CDATA[[PASSED] Successfully saved draft]]>
    </line>
    <line>
      <![CDATA[[PASSED] Successfully saved draft]]>
    </line>
    <line>
      <![CDATA[ [INFO] Saving screenshot to D:\POLITICO\2017_automationscripts\./target/screenshots/\PoliticoStates_FE_Licenses_Tests\2018_04_25_09_53_PM\screenshot.png]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST003_NAVIGATE_TO_STATEPOLICYPAGE *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST007_PUBLISH_WHITEBOARD *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST006_SAVE_BEFORE_PUBLISH_ARTICLE *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST007_PUBLISH_NEWSLETTER_ENTRY *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[  [info] After switching windows, new window title: Politics, Policy, Political News ICBM1 - POLITICO]]>
    </line>
    <line>
      <![CDATA[[PASSED] Clicked Submit button on Login Page !!]]>
    </line>
    <line>
      <![CDATA[  [info] Scrolled to top]]>
    </line>
    <line>
      <![CDATA[[PASSED] Clicked MAIN tab !!]]>
    </line>
    <line>
      <![CDATA[  [info] Scrolled to top]]>
    </line>
    <line>
      <![CDATA[  [info] Clicked on Publish Tab]]>
    </line>
    <line>
      <![CDATA[  [info] Scrolled to top]]>
    </line>
    <line>
      <![CDATA[  [info] Scrolled to top]]>
    </line>
    <line>
      <![CDATA[  [info] Clicked on Publish Tab]]>
    </line>
    <line>
      <![CDATA[  [info] Scrolled to top]]>
    </line>
    <line>
      <![CDATA[Test running on local environment]]>
    </line>
    <line>
      <![CDATA[Platform - web
Browser - chrome]]>
    </line>
    <line>
      <![CDATA[Test running on chrome browser]]>
    </line>
    <line>
      <![CDATA[  [info] Clicked Publish button !!]]>
    </line>
    <line>
      <![CDATA[
***** STARTING TEST: POLITICOSTATES_CMS_ADD_USER_AND_LICENSE_TO_DIVISION_TESTS *****

Launching browser /chrome/ against starting URL: http://smoke-jenkins.ops.politico.com/cms]]>
    </line>
    <line>
      <![CDATA[[PASSED] Published the Content !!]]>
    </line>
    <line>
      <![CDATA[  [info] Clicked Publish button !!]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST011_VERIFYING_PERMALINK_AFTER_CREATING_AND_PUBLISHING_WHITEBOARD *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[[PASSED] Published the Content !!]]>
    </line>
    <line>
      <![CDATA[[PASSED] Successfully saved draft]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST012_VERIFYING_PERMALINK_AFTER_CREATING_AND_PUBLISHING_NEWSLETTER_ENTRY *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST007_PUBLISH_ARTICLE *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[[PASSED] element link_ContentType with text 'Newsletter Entry' is displayed.]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST001_LOGIN *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[  [info] root/root]]>
    </line>
    <line>
      <![CDATA[  [info] Scrolled to top]]>
    </line>
    <line>
      <![CDATA[[PASSED] Clicked MAIN tab !!]]>
    </line>
    <line>
      <![CDATA[  [info] Scrolled to top]]>
    </line>
    <line>
      <![CDATA[  [info] Clicked on Publish Tab]]>
    </line>
    <line>
      <![CDATA[  [info] Scrolled to top]]>
    </line>
    <line>
      <![CDATA[  [info] Launched the 'NEWSLETTER ENTRY' Page]]>
    </line>
    <line>
      <![CDATA[ [INFO] Saving screenshot to D:\POLITICO\2017_automationscripts\./target/screenshots/\PoliticoStates_FE_Licenses_Tests\2018_04_25_09_54_PM\screenshot.png]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST004_VERIFYSECTIONSONSTATETAGPAGE *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[  [info] Scrolled to top]]>
    </line>
    <line>
      <![CDATA[  [info] Clicked on Publish Tab]]>
    </line>
    <line>
      <![CDATA[  [info] Entered Headline !!]]>
    </line>
    <line>
      <![CDATA[  [info] Clicked Publish button !!]]>
    </line>
    <line>
      <![CDATA[[PASSED] element inp_username is displayed.]]>
    </line>
    <line>
      <![CDATA[[PASSED] Published the Content !!]]>
    </line>
    <line>
      <![CDATA[  [info] Entered CMS User credentials: root / root]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST012_VERIFYING_PERMALINK_AFTER_CREATING_AND_PUBLISHING_ARTICLE *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[[PASSED] Newsletter is selected successfully !!]]>
    </line>
    <line>
      <![CDATA[  [info] Clicked Login Button]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST002_SWITCH_TO_STATES_SITE *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[[PASSED] Successfully switched to site: States]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST003_LAUNCH_ACCOUNTMANAGEMENT_WINDOW *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[  [info] No Javascript Alert was found]]>
    </line>
    <line>
      <![CDATA[  [info] No Javascript Alert was found]]>
    </line>
    <line>
      <![CDATA[[PASSED] Contributor is successfully selected]]>
    </line>
    <line>
      <![CDATA[  [info] Scrolled to top]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST004_LAUNCH_ORGANIZATION *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[[PASSED] Selected New Jersey as the Policy Vertical]]>
    </line>
    <line>
      <![CDATA[  [info] Scrolled to top]]>
    </line>
    <line>
      <![CDATA[[PASSED] Clicked MAIN tab !!]]>
    </line>
    <line>
      <![CDATA[  [info]  Organization found and selected]]>
    </line>
    <line>
      <![CDATA[[PASSED] Organization launched successfully]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST005_SELECT_DIVISION *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[ [INFO] Saving screenshot to D:\POLITICO\2017_automationscripts\./target/screenshots/\PoliticoStates_FE_Licenses_Tests\2018_04_25_09_54_PM\screenshot.png]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST005_VERIFY_STATESONLYUSER_CANNOTACCESS_CDANDLC *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[[PASSED] Division found and selected]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST006_ADD_USER_TO_DIVISION *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[[PASSED] Contributor is successfully selected]]>
    </line>
    <line>
      <![CDATA[  [info] The User to be selected isTestUserWedApr25215152IST2018@yopmail.com]]>
    </line>
    <line>
      <![CDATA[[PASSED] Selected New Jersey as the Policy Vertical]]>
    </line>
    <line>
      <![CDATA[[PASSED] element link_under_hamburger is not displayed.]]>
    </line>
    <line>
      <![CDATA[[PASSED] User cannot access - Congressional Directory]]>
    </line>
    <line>
      <![CDATA[  [info] Scrolled to top]]>
    </line>
    <line>
      <![CDATA[  [info] Clicked on Publish Tab]]>
    </line>
    <line>
      <![CDATA[  [info] Scrolled to top]]>
    </line>
    <line>
      <![CDATA[[PASSED] Contributor is successfully selected]]>
    </line>
    <line>
      <![CDATA[  [info] Scrolled to top]]>
    </line>
    <line>
      <![CDATA[[PASSED] User successfully added to the organization division]]>
    </line>
    <line>
      <![CDATA[  [info] Scrolled to top]]>
    </line>
    <line>
      <![CDATA[[PASSED] element link_under_hamburger is not displayed.]]>
    </line>
    <line>
      <![CDATA[[PASSED] User cannot access - Legislative Compass]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST006_VERIFY_STATESONLYUSER_CANACCESS_DOCUMENTS *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST007_ADD_LICENSES_TO_DIVISION *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[  [info] Clicked Publish button !!]]>
    </line>
    <line>
      <![CDATA[ [INFO] Saving screenshot to D:\POLITICO\2017_automationscripts\./target/screenshots/\PoliticoStates_FE_Licenses_Tests\2018_04_25_09_55_PM\screenshot.png]]>
    </line>
    <line>
      <![CDATA[Test running on local environment]]>
    </line>
    <line>
      <![CDATA[Platform - web
Browser - chrome]]>
    </line>
    <line>
      <![CDATA[Test running on chrome browser]]>
    </line>
    <line>
      <![CDATA[[PASSED] Published the Content !!]]>
    </line>
    <line>
      <![CDATA[[PASSED] Selected New Jersey as the Policy Vertical]]>
    </line>
    <line>
      <![CDATA[  [info] Scrolled to top]]>
    </line>
    <line>
      <![CDATA[  [info] Scrolled to top]]>
    </line>
    <line>
      <![CDATA[  [info] Scrolled to top]]>
    </line>
    <line>
      <![CDATA[[PASSED] Pro licenses added successfully]]>
    </line>
    <line>
      <![CDATA[
***** STARTING TEST: POLITICOSTATES_SHORTCUTS_TEST *****

Launching browser /chrome/ against starting URL: http://pro-smoke-jenkins.ops.politico.com/?fm=t]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST009_SEARCH_LICENSE *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[[PASSED] License searching successful]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST010_ASSIGN_LICENSE_TO_USER *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[  [info] Scrolled to top]]>
    </line>
    <line>
      <![CDATA[  [info] Scrolled to top]]>
    </line>
    <line>
      <![CDATA[[PASSED] Licenses succussfully assigned to user]]>
    </line>
    <line>
      <![CDATA[  [info] Clicked Publish button !!]]>
    </line>
    <line>
      <![CDATA[Test running on local environment]]>
    </line>
    <line>
      <![CDATA[Platform - web
Browser - chrome]]>
    </line>
    <line>
      <![CDATA[Test running on chrome browser]]>
    </line>
    <line>
      <![CDATA[[PASSED] Published the Content !!]]>
    </line>
    <line>
      <![CDATA[  [info] After switching windows, new window title: smoke-jenkins.ops.politico.com]]>
    </line>
    <line>
      <![CDATA[  [info] Scrolled to top]]>
    </line>
    <line>
      <![CDATA[[PASSED] PermaLink generated successfully]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST012_VERIFYING_PERMALINK_LAUNCH_REDIRECT_CORRECTLY *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[  [info] Scrolled to top]]>
    </line>
    <line>
      <![CDATA[  [info] Clicked on Publish Tab]]>
    </line>
    <line>
      <![CDATA[  [info] Scrolled to top]]>
    </line>
    <line>
      <![CDATA[
***** STARTING TEST: POLITICOSTATES_NEWSLETTERSIGNUPFORCOREUSER *****

Launching browser /chrome/ against starting URL: http://smoke-jenkins.ops.politico.com/cms]]>
    </line>
    <line>
      <![CDATA[  [info] After switching windows, new window title: smoke-jenkins.ops.politico.com]]>
    </line>
    <line>
      <![CDATA[[PASSED] PermaLink generated successfully]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST013_VERIFYING_PERMALINK_LAUNCH_REDIRECT_CORRECTLY *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[  [info] Clicked Publish button !!]]>
    </line>
    <line>
      <![CDATA[[PASSED] Published the Content !!]]>
    </line>
    <line>
      <![CDATA[  [info] Scrolled to top]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST001_POLITICOPRO_CLICKONLOGINNAVIGATESTOPOLITICOPROLANDINGPAGE *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[ [INFO] Saving screenshot to D:\POLITICO\2017_automationscripts\./target/screenshots/\PoliticoStates_Content_Whiteboard_Tests\2018_04_25_09_56_PM\screenshot.png]]>
    </line>
    <line>
      <![CDATA[  [info] After switching windows, new window title: smoke-jenkins.ops.politico.com]]>
    </line>
    <line>
      <![CDATA[[PASSED] PermaLink generated successfully]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST013_VERIFYING_PERMALINK_LAUNCH_REDIRECT_CORRECTLY *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST01_LOGININTOCMS *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[  [info] root/root]]>
    </line>
    <line>
      <![CDATA[ [INFO] Saving screenshot to D:\POLITICO\2017_automationscripts\./target/screenshots/\PoliticoStates_Content_Newsletter_Entry\2018_04_25_09_56_PM\screenshot.png]]>
    </line>
    <line>
      <![CDATA[[PASSED] element inp_username is displayed.]]>
    </line>
    <line>
      <![CDATA[  [info] Entered CMS User credentials: root / root]]>
    </line>
    <line>
      <![CDATA[  [info] User is already on Pro Login Page !!]]>
    </line>
    <line>
      <![CDATA[  [info] Clicked Login Button]]>
    </line>
    <line>
      <![CDATA[[PASSED] Successfully switched to site: States]]>
    </line>
    <line>
      <![CDATA[  [info] No Javascript Alert was found]]>
    </line>
    <line>
      <![CDATA[Entered Email 'qatest_states@politico.com' !! ]]>
    </line>
    <line>
      <![CDATA[Entered Password '123456' !! ]]>
    </line>
    <line>
      <![CDATA[ [INFO] Saving screenshot to D:\POLITICO\2017_automationscripts\./target/screenshots/\PoliticoStates_Content_Article_Tests\2018_04_25_09_56_PM\screenshot.png]]>
    </line>
    <line>
      <![CDATA[  [info] Created User AutomationUser06250420180951@yopmail.com]]>
    </line>
    <line>
      <![CDATA[  [info] Scrolled to top]]>
    </line>
    <line>
      <![CDATA[[PASSED] element archive is displayed.]]>
    </line>
    <line>
      <![CDATA[[PASSED] Core user created successfully]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST02_VERIFY_NEWSLETTERLANDING_AND_ENHANCESSIGNUP_ON_FE *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[Clicked Submit button successfully !!]]>
    </line>
    <line>
      <![CDATA[Driver is null while taking screen shot]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST05_VERIFY_SIGNUP_FOR_VERIFIED_EMAILADDRESS *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[[PASSED] element text_loggedProUser_Name is displayed.]]>
    </line>
    <line>
      <![CDATA[[PASSED]: User has successfully logged into Politico Pro !! ]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST002_VERIFY_SHORCUTS_IS_PRESENT *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[Driver is null while taking screen shot]]>
    </line>
    <line>
      <![CDATA[[PASSED] element shortcut_header is displayed.]]>
    </line>
    <line>
      <![CDATA[ [INFO] Saving screenshot to D:\POLITICO\2017_automationscripts\./target/screenshots/\PoliticoStates_ShortCuts_Test\2018_04_25_09_57_PM\screenshot.png]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST003_VERIFY_USER_CAN_ADD_SHORTCUTS *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[[PASSED] Hamburger is in edit mode for adding shortcuts.]]>
    </line>
    <line>
      <![CDATA[ [INFO] Saving screenshot to D:\POLITICO\2017_automationscripts\./target/screenshots/\PoliticoStates_ShortCuts_Test\2018_04_25_09_57_PM\screenshot.png]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP: TEST005_VERIFY_REMOVING_OF_SHORTCUTS *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[ [INFO] Saving screenshot to D:\POLITICO\2017_automationscripts\./target/screenshots/\PoliticoStates_ShortCuts_Test\2018_04_25_09_58_PM\screenshot.png]]>
    </line>
  </reporter-output>
  <suite name="Politico States Smoke Test Suite" duration-ms="374819" started-at="2018-04-25T16:21:52Z" finished-at="2018-04-25T16:28:07Z">
    <groups>
      <group name="smoke">
        <method signature="PoliticoStates_CMS_Add_User_And_License_To_Division_Tests.Test001_Login()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="Test001_Login" class="com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests"/>
        <method signature="PoliticoStates_CMS_Add_User_And_License_To_Division_Tests.Test002_Switch_To_States_Site()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="Test002_Switch_To_States_Site" class="com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests"/>
        <method signature="PoliticoStates_CMS_Add_User_And_License_To_Division_Tests.Test003_Launch_AccountManagement_Window()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="Test003_Launch_AccountManagement_Window" class="com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests"/>
        <method signature="PoliticoStates_CMS_Add_User_And_License_To_Division_Tests.Test004_Launch_Organization()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="Test004_Launch_Organization" class="com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests"/>
        <method signature="PoliticoStates_CMS_Add_User_And_License_To_Division_Tests.Test005_Select_Division()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="Test005_Select_Division" class="com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests"/>
        <method signature="PoliticoStates_CMS_Add_User_And_License_To_Division_Tests.Test006_Add_User_To_Division()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="Test006_Add_User_To_Division" class="com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests"/>
        <method signature="PoliticoStates_CMS_Add_User_And_License_To_Division_Tests.Test007_Add_Licenses_To_Division()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="Test007_Add_Licenses_To_Division" class="com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests"/>
        <method signature="PoliticoStates_CMS_Add_User_And_License_To_Division_Tests.Test009_Search_License()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="Test009_Search_License" class="com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests"/>
        <method signature="PoliticoStates_CMS_Add_User_And_License_To_Division_Tests.Test010_Assign_License_To_User()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="Test010_Assign_License_To_User" class="com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests"/>
        <method signature="PoliticoStates_CMS_Create_Core_User_Tests.Test001_Login()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests@3a5ed7a6]" name="Test001_Login" class="com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests"/>
        <method signature="PoliticoStates_CMS_Create_Core_User_Tests.Test002_Switch_To_States_Site()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests@3a5ed7a6]" name="Test002_Switch_To_States_Site" class="com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests"/>
        <method signature="PoliticoStates_CMS_Create_Core_User_Tests.Test003_Launch_AccountManagement_Window()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests@3a5ed7a6]" name="Test003_Launch_AccountManagement_Window" class="com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests"/>
        <method signature="PoliticoStates_CMS_Create_Core_User_Tests.Test004_Launch_Create_User_Window()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests@3a5ed7a6]" name="Test004_Launch_Create_User_Window" class="com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests"/>
        <method signature="PoliticoStates_CMS_Create_Core_User_Tests.Test005_Fill_User_Details()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests@3a5ed7a6]" name="Test005_Fill_User_Details" class="com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests"/>
        <method signature="PoliticoStates_CMS_Create_Core_User_Tests.Test006_Verify_Creation_Of_User_Through_Frontend()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests@3a5ed7a6]" name="Test006_Verify_Creation_Of_User_Through_Frontend" class="com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests"/>
        <method signature="PoliticoStates_FE_Licenses_Tests.Test001_PoliticoPro_ClickOnLoginNavigatesToPoliticoProLandingPage()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests@63e2203c]" name="Test001_PoliticoPro_ClickOnLoginNavigatesToPoliticoProLandingPage" class="com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests"/>
        <method signature="PoliticoStates_FE_Licenses_Tests.Test002_Verify_StateLicenses_Are_Visible_UnderStateNews()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests@63e2203c]" name="Test002_Verify_StateLicenses_Are_Visible_UnderStateNews" class="com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests"/>
        <method signature="PoliticoStates_FE_Licenses_Tests.Test003_Navigate_To_StatePolicyPage()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests@63e2203c]" name="Test003_Navigate_To_StatePolicyPage" class="com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests"/>
        <method signature="PoliticoStates_FE_Licenses_Tests.Test004_VerifySectionsOnStateTagPage()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests@63e2203c]" name="Test004_VerifySectionsOnStateTagPage" class="com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests"/>
        <method signature="PoliticoStates_FE_Licenses_Tests.Test005_Verify_StatesOnlyUser_CannotAccess_CDAndLC()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests@63e2203c]" name="Test005_Verify_StatesOnlyUser_CannotAccess_CDAndLC" class="com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests"/>
        <method signature="PoliticoStates_FE_Licenses_Tests.Test006_Verify_StatesOnlyUser_CanAccess_Documents()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests@63e2203c]" name="Test006_Verify_StatesOnlyUser_CanAccess_Documents" class="com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests"/>
        <method signature="PoliticoStates_Content_Whiteboard_Tests.Test001_Login()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a]" name="Test001_Login" class="com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests"/>
        <method signature="PoliticoStates_Content_Whiteboard_Tests.Test002_Launch_Whiteboard_Creation_Window()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a]" name="Test002_Launch_Whiteboard_Creation_Window" class="com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests"/>
        <method signature="PoliticoStates_Content_Whiteboard_Tests.Test005_Creating_Whiteboard()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a]" name="Test005_Creating_Whiteboard" class="com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests"/>
        <method signature="PoliticoStates_Content_Whiteboard_Tests.Test006_Save_Before_Publish_Whiteboard()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a]" name="Test006_Save_Before_Publish_Whiteboard" class="com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests"/>
        <method signature="PoliticoStates_Content_Whiteboard_Tests.Test007_Publish_Whiteboard()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a]" name="Test007_Publish_Whiteboard" class="com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests"/>
        <method signature="PoliticoStates_Content_Whiteboard_Tests.Test011_Verifying_PermaLink_After_Creating_And_Publishing_Whiteboard()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a]" name="Test011_Verifying_PermaLink_After_Creating_And_Publishing_Whiteboard" class="com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests"/>
        <method signature="PoliticoStates_Content_Whiteboard_Tests.Test012_Verifying_PermaLink_Launch_Redirect_Correctly()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a]" name="Test012_Verifying_PermaLink_Launch_Redirect_Correctly" class="com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests"/>
        <method signature="PoliticoStates_Content_Newsletter_Entry.Test001_Login()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067]" name="Test001_Login" class="com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry"/>
        <method signature="PoliticoStates_Content_Newsletter_Entry.Test002_Launch_Newsletter_Entry_Creation_Window()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067]" name="Test002_Launch_Newsletter_Entry_Creation_Window" class="com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry"/>
        <method signature="PoliticoStates_Content_Newsletter_Entry.Test005_Creating_Newsletter_Entry()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067]" name="Test005_Creating_Newsletter_Entry" class="com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry"/>
        <method signature="PoliticoStates_Content_Newsletter_Entry.Test006_Save_Before_Publish_Newsletter_Entry()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067]" name="Test006_Save_Before_Publish_Newsletter_Entry" class="com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry"/>
        <method signature="PoliticoStates_Content_Newsletter_Entry.Test007_Publish_Newsletter_Entry()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067]" name="Test007_Publish_Newsletter_Entry" class="com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry"/>
        <method signature="PoliticoStates_Content_Newsletter_Entry.Test012_Verifying_PermaLink_After_Creating_And_Publishing_Newsletter_Entry()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067]" name="Test012_Verifying_PermaLink_After_Creating_And_Publishing_Newsletter_Entry" class="com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry"/>
        <method signature="PoliticoStates_Content_Newsletter_Entry.Test013_Verifying_PermaLink_Launch_Redirect_Correctly()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067]" name="Test013_Verifying_PermaLink_Launch_Redirect_Correctly" class="com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry"/>
        <method signature="PoliticoStates_Content_Article_Tests.Test001_Login()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799]" name="Test001_Login" class="com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests"/>
        <method signature="PoliticoStates_Content_Article_Tests.Test002_Launch_Article_Creation_Window()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799]" name="Test002_Launch_Article_Creation_Window" class="com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests"/>
        <method signature="PoliticoStates_Content_Article_Tests.Test005_Creating_And_Publishing_Article()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799]" name="Test005_Creating_And_Publishing_Article" class="com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests"/>
        <method signature="PoliticoStates_Content_Article_Tests.Test006_Save_Before_Publish_Article()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799]" name="Test006_Save_Before_Publish_Article" class="com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests"/>
        <method signature="PoliticoStates_Content_Article_Tests.Test007_Publish_Article()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799]" name="Test007_Publish_Article" class="com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests"/>
        <method signature="PoliticoStates_Content_Article_Tests.Test012_Verifying_PermaLink_After_Creating_And_Publishing_Article()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799]" name="Test012_Verifying_PermaLink_After_Creating_And_Publishing_Article" class="com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests"/>
        <method signature="PoliticoStates_Content_Article_Tests.Test013_Verifying_PermaLink_Launch_Redirect_Correctly()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799]" name="Test013_Verifying_PermaLink_Launch_Redirect_Correctly" class="com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests"/>
        <method signature="PoliticoStates_ShortCuts_Test.Test001_PoliticoPro_ClickOnLoginNavigatesToPoliticoProLandingPage()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test@d44fc21]" name="Test001_PoliticoPro_ClickOnLoginNavigatesToPoliticoProLandingPage" class="com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test"/>
        <method signature="PoliticoStates_ShortCuts_Test.Test002_Verify_Shorcuts_Is_Present()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test@d44fc21]" name="Test002_Verify_Shorcuts_Is_Present" class="com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test"/>
        <method signature="PoliticoStates_ShortCuts_Test.Test003_Verify_User_Can_Add_Shortcuts()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test@d44fc21]" name="Test003_Verify_User_Can_Add_Shortcuts" class="com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test"/>
        <method signature="PoliticoStates_ShortCuts_Test.Test005_Verify_Removing_Of_Shortcuts()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test@d44fc21]" name="Test005_Verify_Removing_Of_Shortcuts" class="com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test"/>
        <method signature="PoliticoStates_NewsletterSignUpForCoreUser.Test01_LoginIntoCMS()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_NewsletterSignUpForCoreUser@184f6be2]" name="Test01_LoginIntoCMS" class="com.qait.politico.states.tests.PoliticoStates_NewsletterSignUpForCoreUser"/>
        <method signature="PoliticoStates_NewsletterSignUpForCoreUser.Test02_Verify_NewsletterLanding_And_EnhancesSignUp_On_FE()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_NewsletterSignUpForCoreUser@184f6be2]" name="Test02_Verify_NewsletterLanding_And_EnhancesSignUp_On_FE" class="com.qait.politico.states.tests.PoliticoStates_NewsletterSignUpForCoreUser"/>
        <method signature="PoliticoStates_NewsletterSignUpForCoreUser.Test05_Verify_SignUp_For_Verified_EmailAddress()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_NewsletterSignUpForCoreUser@184f6be2]" name="Test05_Verify_SignUp_For_Verified_EmailAddress" class="com.qait.politico.states.tests.PoliticoStates_NewsletterSignUpForCoreUser"/>
      </group> <!-- smoke -->
    </groups>
    <test name="State FrontEnd License Verification" duration-ms="203733" started-at="2018-04-25T16:21:52Z" finished-at="2018-04-25T16:25:16Z">
      <class name="com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests">
        <test-method status="PASS" signature="Start_Test_Session()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests@63e2203c]" name="Start_Test_Session" is-config="true" duration-ms="21544" started-at="2018-04-25T21:51:52Z" finished-at="2018-04-25T21:52:14Z">
          <reporter-output>
            <line>
              <![CDATA[Test running on local environment]]>
            </line>
            <line>
              <![CDATA[Platform - web
Browser - chrome]]>
            </line>
            <line>
              <![CDATA[Test running on chrome browser]]>
            </line>
            <line>
              <![CDATA[
***** STARTING TEST: POLITICOSTATES_FE_LICENSES_TESTS *****

Launching browser /chrome/ against starting URL: http://pro-smoke-jenkins.ops.politico.com/?fm=t]]>
            </line>
          </reporter-output>
        </test-method> <!-- Start_Test_Session -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests@63e2203c]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:52:14Z" finished-at="2018-04-25T21:52:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests.Test001_PoliticoPro_ClickOnLoginNavigatesToPoliticoProLandingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST001_POLITICOPRO_CLICKONLOGINNAVIGATESTOPOLITICOPROLANDINGPAGE *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="Test001_PoliticoPro_ClickOnLoginNavigatesToPoliticoProLandingPage()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests@63e2203c]" name="Test001_PoliticoPro_ClickOnLoginNavigatesToPoliticoProLandingPage" duration-ms="63279" started-at="2018-04-25T21:52:14Z" finished-at="2018-04-25T21:53:17Z">
          <reporter-output>
            <line>
              <![CDATA[  [info] User is already on Pro Login Page !!]]>
            </line>
            <line>
              <![CDATA[Entered Email 'qatest_states@politico.com' !! ]]>
            </line>
            <line>
              <![CDATA[Entered Password '123456' !! ]]>
            </line>
            <line>
              <![CDATA[Clicked Submit button successfully !!]]>
            </line>
            <line>
              <![CDATA[[PASSED] element text_loggedProUser_Name is displayed.]]>
            </line>
            <line>
              <![CDATA[[PASSED]: User has successfully logged into Politico Pro !! ]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test001_PoliticoPro_ClickOnLoginNavigatesToPoliticoProLandingPage -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests@63e2203c]" name="takeScreenshotonFailure" is-config="true" duration-ms="1" started-at="2018-04-25T21:53:17Z" finished-at="2018-04-25T21:53:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test001_PoliticoPro_ClickOnLoginNavigatesToPoliticoProLandingPage status=SUCCESS method=PoliticoStates_FE_Licenses_Tests.Test001_PoliticoPro_ClickOnLoginNavigatesToPoliticoProLandingPage()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests@63e2203c] output=  [info] User is already on Pro Login Page !!]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests@63e2203c]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:53:17Z" finished-at="2018-04-25T21:53:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests.Test002_Verify_StateLicenses_Are_Visible_UnderStateNews()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST002_VERIFY_STATELICENSES_ARE_VISIBLE_UNDERSTATENEWS *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="FAIL" signature="Test002_Verify_StateLicenses_Are_Visible_UnderStateNews()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests@63e2203c]" name="Test002_Verify_StateLicenses_Are_Visible_UnderStateNews" duration-ms="33021" started-at="2018-04-25T21:53:17Z" finished-at="2018-04-25T21:53:50Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[FAILED: Element link_under_hamburger not found on the PoliticoProLandingPageActions !!!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: FAILED: Element link_under_hamburger not found on the PoliticoProLandingPageActions !!!
	at org.testng.Assert.fail(Assert.java:94)
	at com.qait.automation.getpageobjects.GetPage.element(GetPage.java:105)
	at com.qait.automation.keywords.PoliticoPro_LandingPage_Actions.verifyPresenceOfSubscriptions(PoliticoPro_LandingPage_Actions.java:319)
	at com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests.Test002_Verify_StateLicenses_Are_Visible_UnderStateNews(PoliticoStates_FE_Licenses_Tests.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:37)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:368)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test002_Verify_StateLicenses_Are_Visible_UnderStateNews -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests@63e2203c]" name="takeScreenshotonFailure" is-config="true" duration-ms="433" started-at="2018-04-25T21:53:50Z" finished-at="2018-04-25T21:53:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test002_Verify_StateLicenses_Are_Visible_UnderStateNews status=FAILURE method=PoliticoStates_FE_Licenses_Tests.Test002_Verify_StateLicenses_Are_Visible_UnderStateNews()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests@63e2203c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ [INFO] Saving screenshot to D:\POLITICO\2017_automationscripts\./target/screenshots/\PoliticoStates_FE_Licenses_Tests\2018_04_25_09_53_PM\screenshot.png]]>
            </line>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="FAIL" signature="Test003_Navigate_To_StatePolicyPage()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests@63e2203c]" name="Test003_Navigate_To_StatePolicyPage" duration-ms="32150" started-at="2018-04-25T21:53:51Z" finished-at="2018-04-25T21:54:23Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[FAILED: Element link_Hamburger_StatePolicy not found on the PoliticoProLandingPageActions !!!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: FAILED: Element link_Hamburger_StatePolicy not found on the PoliticoProLandingPageActions !!!
	at org.testng.Assert.fail(Assert.java:94)
	at com.qait.automation.getpageobjects.GetPage.element(GetPage.java:105)
	at com.qait.automation.keywords.PoliticoPro_LandingPage_Actions.selectStatesPolicyFromHamburgerMenu(PoliticoPro_LandingPage_Actions.java:123)
	at com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests.Test003_Navigate_To_StatePolicyPage(PoliticoStates_FE_Licenses_Tests.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:37)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:368)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test003_Navigate_To_StatePolicyPage -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests@63e2203c]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:53:51Z" finished-at="2018-04-25T21:53:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests.Test003_Navigate_To_StatePolicyPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST003_NAVIGATE_TO_STATEPOLICYPAGE *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests@63e2203c]" name="takeScreenshotonFailure" is-config="true" duration-ms="377" started-at="2018-04-25T21:54:23Z" finished-at="2018-04-25T21:54:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test003_Navigate_To_StatePolicyPage status=FAILURE method=PoliticoStates_FE_Licenses_Tests.Test003_Navigate_To_StatePolicyPage()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests@63e2203c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ [INFO] Saving screenshot to D:\POLITICO\2017_automationscripts\./target/screenshots/\PoliticoStates_FE_Licenses_Tests\2018_04_25_09_54_PM\screenshot.png]]>
            </line>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests@63e2203c]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:54:23Z" finished-at="2018-04-25T21:54:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests.Test004_VerifySectionsOnStateTagPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST004_VERIFYSECTIONSONSTATETAGPAGE *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="FAIL" signature="Test004_VerifySectionsOnStateTagPage()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests@63e2203c]" name="Test004_VerifySectionsOnStateTagPage" duration-ms="30064" started-at="2018-04-25T21:54:23Z" finished-at="2018-04-25T21:54:53Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[FAILED: Element link_SubNav_Title not found on the PoliticoProLandingPageActions !!!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: FAILED: Element link_SubNav_Title not found on the PoliticoProLandingPageActions !!!
	at org.testng.Assert.fail(Assert.java:94)
	at com.qait.automation.getpageobjects.GetPage.element(GetPage.java:105)
	at com.qait.automation.getpageobjects.GetPage.element(GetPage.java:80)
	at com.qait.automation.keywords.PoliticoPro_LandingPage_Actions.verifyClickingSubNavigationTitle(PoliticoPro_LandingPage_Actions.java:1259)
	at com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests.Test004_VerifySectionsOnStateTagPage(PoliticoStates_FE_Licenses_Tests.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:37)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:368)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test004_VerifySectionsOnStateTagPage -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests@63e2203c]" name="takeScreenshotonFailure" is-config="true" duration-ms="440" started-at="2018-04-25T21:54:53Z" finished-at="2018-04-25T21:54:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test004_VerifySectionsOnStateTagPage status=FAILURE method=PoliticoStates_FE_Licenses_Tests.Test004_VerifySectionsOnStateTagPage()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests@63e2203c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ [INFO] Saving screenshot to D:\POLITICO\2017_automationscripts\./target/screenshots/\PoliticoStates_FE_Licenses_Tests\2018_04_25_09_54_PM\screenshot.png]]>
            </line>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests@63e2203c]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:54:54Z" finished-at="2018-04-25T21:54:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests.Test005_Verify_StatesOnlyUser_CannotAccess_CDAndLC()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST005_VERIFY_STATESONLYUSER_CANNOTACCESS_CDANDLC *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="Test005_Verify_StatesOnlyUser_CannotAccess_CDAndLC()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests@63e2203c]" name="Test005_Verify_StatesOnlyUser_CannotAccess_CDAndLC" duration-ms="16924" started-at="2018-04-25T21:54:54Z" finished-at="2018-04-25T21:55:11Z">
          <reporter-output>
            <line>
              <![CDATA[[PASSED] element link_under_hamburger is not displayed.]]>
            </line>
            <line>
              <![CDATA[[PASSED] User cannot access - Congressional Directory]]>
            </line>
            <line>
              <![CDATA[[PASSED] element link_under_hamburger is not displayed.]]>
            </line>
            <line>
              <![CDATA[[PASSED] User cannot access - Legislative Compass]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test005_Verify_StatesOnlyUser_CannotAccess_CDAndLC -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests@63e2203c]" name="takeScreenshotonFailure" is-config="true" duration-ms="0" started-at="2018-04-25T21:55:11Z" finished-at="2018-04-25T21:55:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test005_Verify_StatesOnlyUser_CannotAccess_CDAndLC status=SUCCESS method=PoliticoStates_FE_Licenses_Tests.Test005_Verify_StatesOnlyUser_CannotAccess_CDAndLC()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests@63e2203c] output=[PASSED] element link_under_hamburger is not displayed.]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests@63e2203c]" name="handleTestMethodName" is-config="true" duration-ms="1" started-at="2018-04-25T21:55:11Z" finished-at="2018-04-25T21:55:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests.Test006_Verify_StatesOnlyUser_CanAccess_Documents()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST006_VERIFY_STATESONLYUSER_CANACCESS_DOCUMENTS *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="FAIL" signature="Test006_Verify_StatesOnlyUser_CanAccess_Documents()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests@63e2203c]" name="Test006_Verify_StatesOnlyUser_CanAccess_Documents" duration-ms="5057" started-at="2018-04-25T21:55:11Z" finished-at="2018-04-25T21:55:16Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[FAILED: Element link_under_hamburger not found on the PoliticoProLandingPageActions !!!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: FAILED: Element link_under_hamburger not found on the PoliticoProLandingPageActions !!!
	at org.testng.Assert.fail(Assert.java:94)
	at com.qait.automation.getpageobjects.GetPage.element(GetPage.java:105)
	at com.qait.automation.keywords.PoliticoPro_LandingPage_Actions.verifyClicking_OnDocuments_NavigatesToDocumentsPage(PoliticoPro_LandingPage_Actions.java:434)
	at com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests.Test006_Verify_StatesOnlyUser_CanAccess_Documents(PoliticoStates_FE_Licenses_Tests.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:37)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:368)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test006_Verify_StatesOnlyUser_CanAccess_Documents -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests@63e2203c]" name="takeScreenshotonFailure" is-config="true" duration-ms="400" started-at="2018-04-25T21:55:16Z" finished-at="2018-04-25T21:55:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test006_Verify_StatesOnlyUser_CanAccess_Documents status=FAILURE method=PoliticoStates_FE_Licenses_Tests.Test006_Verify_StatesOnlyUser_CanAccess_Documents()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests@63e2203c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ [INFO] Saving screenshot to D:\POLITICO\2017_automationscripts\./target/screenshots/\PoliticoStates_FE_Licenses_Tests\2018_04_25_09_55_PM\screenshot.png]]>
            </line>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="stop_test_session()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests@63e2203c]" name="stop_test_session" is-config="true" duration-ms="0" started-at="2018-04-25T21:55:16Z" finished-at="2018-04-25T21:55:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stop_test_session -->
      </class> <!-- com.qait.politico.states.tests.PoliticoStates_FE_Licenses_Tests -->
    </test> <!-- State FrontEnd License Verification -->
    <test name="State Account Managment Test" duration-ms="216842" started-at="2018-04-25T16:21:52Z" finished-at="2018-04-25T16:25:29Z">
      <class name="com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests">
        <test-method status="PASS" signature="Start_Test_Session()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests@3a5ed7a6]" name="Start_Test_Session" is-config="true" duration-ms="25585" started-at="2018-04-25T21:51:52Z" finished-at="2018-04-25T21:52:18Z">
          <reporter-output>
            <line>
              <![CDATA[Test running on local environment]]>
            </line>
            <line>
              <![CDATA[Platform - web
Browser - chrome]]>
            </line>
            <line>
              <![CDATA[Test running on chrome browser]]>
            </line>
            <line>
              <![CDATA[
***** STARTING TEST: POLITICOSTATES_CMS_CREATE_CORE_USER_TESTS *****

Launching browser /chrome/ against starting URL: http://smoke-jenkins.ops.politico.com/cms]]>
            </line>
          </reporter-output>
        </test-method> <!-- Start_Test_Session -->
        <test-method status="PASS" signature="Test001_Login()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests@3a5ed7a6]" name="Test001_Login" duration-ms="19719" started-at="2018-04-25T21:52:18Z" finished-at="2018-04-25T21:52:38Z">
          <reporter-output>
            <line>
              <![CDATA[  [info] root/root]]>
            </line>
            <line>
              <![CDATA[[PASSED] element inp_username is displayed.]]>
            </line>
            <line>
              <![CDATA[  [info] Entered CMS User credentials: root / root]]>
            </line>
            <line>
              <![CDATA[  [info] Clicked Login Button]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test001_Login -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests@3a5ed7a6]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:52:18Z" finished-at="2018-04-25T21:52:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests.Test001_Login()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST001_LOGIN *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests@3a5ed7a6]" name="takeScreenshotonFailure" is-config="true" duration-ms="1" started-at="2018-04-25T21:52:38Z" finished-at="2018-04-25T21:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test001_Login status=SUCCESS method=PoliticoStates_CMS_Create_Core_User_Tests.Test001_Login()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests@3a5ed7a6] output=  [info] root/root]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="Test002_Switch_To_States_Site()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests@3a5ed7a6]" name="Test002_Switch_To_States_Site" duration-ms="255" started-at="2018-04-25T21:52:38Z" finished-at="2018-04-25T21:52:38Z">
          <reporter-output>
            <line>
              <![CDATA[[PASSED] Successfully switched to site: States]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test002_Switch_To_States_Site -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests@3a5ed7a6]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:52:38Z" finished-at="2018-04-25T21:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests.Test002_Switch_To_States_Site()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST002_SWITCH_TO_STATES_SITE *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests@3a5ed7a6]" name="takeScreenshotonFailure" is-config="true" duration-ms="0" started-at="2018-04-25T21:52:38Z" finished-at="2018-04-25T21:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test002_Switch_To_States_Site status=SUCCESS method=PoliticoStates_CMS_Create_Core_User_Tests.Test002_Switch_To_States_Site()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests@3a5ed7a6] output=[PASSED] Successfully switched to site: States]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="Test003_Launch_AccountManagement_Window()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests@3a5ed7a6]" name="Test003_Launch_AccountManagement_Window" duration-ms="6779" started-at="2018-04-25T21:52:38Z" finished-at="2018-04-25T21:52:45Z">
          <reporter-output>
            <line>
              <![CDATA[  [info] No Javascript Alert was found]]>
            </line>
            <line>
              <![CDATA[  [info] No Javascript Alert was found]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test003_Launch_AccountManagement_Window -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests@3a5ed7a6]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:52:38Z" finished-at="2018-04-25T21:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests.Test003_Launch_AccountManagement_Window()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST003_LAUNCH_ACCOUNTMANAGEMENT_WINDOW *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests@3a5ed7a6]" name="takeScreenshotonFailure" is-config="true" duration-ms="0" started-at="2018-04-25T21:52:45Z" finished-at="2018-04-25T21:52:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test003_Launch_AccountManagement_Window status=SUCCESS method=PoliticoStates_CMS_Create_Core_User_Tests.Test003_Launch_AccountManagement_Window()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests@3a5ed7a6] output=  [info] No Javascript Alert was found]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests@3a5ed7a6]" name="handleTestMethodName" is-config="true" duration-ms="1" started-at="2018-04-25T21:52:45Z" finished-at="2018-04-25T21:52:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests.Test004_Launch_Create_User_Window()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST004_LAUNCH_CREATE_USER_WINDOW *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="Test004_Launch_Create_User_Window()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests@3a5ed7a6]" name="Test004_Launch_Create_User_Window" duration-ms="3033" started-at="2018-04-25T21:52:45Z" finished-at="2018-04-25T21:52:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test004_Launch_Create_User_Window -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests@3a5ed7a6]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:52:48Z" finished-at="2018-04-25T21:52:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests.Test005_Fill_User_Details()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST005_FILL_USER_DETAILS *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests@3a5ed7a6]" name="takeScreenshotonFailure" is-config="true" duration-ms="0" started-at="2018-04-25T21:52:48Z" finished-at="2018-04-25T21:52:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test004_Launch_Create_User_Window status=SUCCESS method=PoliticoStates_CMS_Create_Core_User_Tests.Test004_Launch_Create_User_Window()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests@3a5ed7a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="Test005_Fill_User_Details()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests@3a5ed7a6]" name="Test005_Fill_User_Details" duration-ms="16697" started-at="2018-04-25T21:52:48Z" finished-at="2018-04-25T21:53:04Z">
          <reporter-output>
            <line>
              <![CDATA[  [info] Element [[ChromeDriver: chrome on XP (ec4e3d12b17733afe24fd870a7562941)] -> css selector: div[class='inputSmall']>input[name*='isTester'][type='checkbox' ]] could not be clicked! unknown error: Element <input id="i1e7fdf1f5d764967b95c44fc251ed2dd" name="00000162-fd9d-da8d-a7fb-ff9d51280000/isTester" type="checkbox" value="true"> is not clickable at point (195, 9). Other element would receive the click: <div class="toolHeader toolHeader-hasEnvironment">...</div>
  (Session info: chrome=66.0.3359.117)
  (Driver info: chromedriver=2.36.540470 (e522d04694c7ebea4ba8821272dbef4f9b818c91),platform=Windows NT 6.3.9600 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.10.0', revision: '176b4a9', time: '2018-03-02T19:03:16.397Z'
System info: host: 'DLLA1439', ip: '10.90.0.51', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_161'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.36.540470 (e522d04694c7eb..., userDataDir: C:\Users\SHWETA~1\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 66.0.3359.117, webStorageEnabled: true}
Session ID: ec4e3d12b17733afe24fd870a7562941]]>
            </line>
            <line>
              <![CDATA[  [info] No Javascript Alert was found]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test005_Fill_User_Details -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests@3a5ed7a6]" name="takeScreenshotonFailure" is-config="true" duration-ms="0" started-at="2018-04-25T21:53:04Z" finished-at="2018-04-25T21:53:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test005_Fill_User_Details status=SUCCESS method=PoliticoStates_CMS_Create_Core_User_Tests.Test005_Fill_User_Details()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests@3a5ed7a6] output=  [info] Element [[ChromeDriver: chrome on XP (ec4e3d12b17733afe24fd870a7562941)] -> css selector: div[class='inputSmall']>input[name*='isTester'][type='checkbox' ]] could not be clicked! unknown error: Element <input id="i1e7fdf1f5d764967b95c44fc251ed2dd" name="00000162-fd9d-da8d-a7fb-ff9d51280000/isTester" type="checkbox" value="true"> is not clickable at point (195, 9). Other element would receive the click: <div class="toolHeader toolHeader-hasEnvironment">...</div>
  (Session info: chrome=66.0.3359.117)
  (Driver info: chromedriver=2.36.540470 (e522d04694c7ebea4ba8821272dbef4f9b818c91),platform=Windows NT 6.3.9600 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.10.0', revision: '176b4a9', time: '2018-03-02T19:03:16.397Z'
System info: host: 'DLLA1439', ip: '10.90.0.51', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_161'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.36.540470 (e522d04694c7eb..., userDataDir: C:\Users\SHWETA~1\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 66.0.3359.117, webStorageEnabled: true}
Session ID: ec4e3d12b17733afe24fd870a7562941]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests@3a5ed7a6]" name="handleTestMethodName" is-config="true" duration-ms="15" started-at="2018-04-25T21:53:04Z" finished-at="2018-04-25T21:53:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests.Test006_Verify_Creation_Of_User_Through_Frontend()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST006_VERIFY_CREATION_OF_USER_THROUGH_FRONTEND *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="Test006_Verify_Creation_Of_User_Through_Frontend()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests@3a5ed7a6]" name="Test006_Verify_Creation_Of_User_Through_Frontend" duration-ms="55788" started-at="2018-04-25T21:53:05Z" finished-at="2018-04-25T21:54:00Z">
          <reporter-output>
            <line>
              <![CDATA[
***** STARTING TEST: POLITICOSTATES_CMS_CREATE_CORE_USER_TESTS *****

Launching browser /chrome/ against starting URL: http://smoke-jenkins.ops.politico.com]]>
            </line>
            <line>
              <![CDATA[  [info] Opened Hamburger Menu !!]]>
            </line>
            <line>
              <![CDATA[[PASSED] Clicked LogIn link on the Hamburger Menu !!]]>
            </line>
            <line>
              <![CDATA[  [info] Scrolled to top]]>
            </line>
            <line>
              <![CDATA[[PASSED] PageTitle for Politico Login contains: 'Politico Login']]>
            </line>
            <line>
              <![CDATA[  [info] After switching windows, new window title: Politics, Policy, Political News ICBM1 - POLITICO]]>
            </line>
            <line>
              <![CDATA[[PASSED] Clicked Submit button on Login Page !!]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test006_Verify_Creation_Of_User_Through_Frontend -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests@3a5ed7a6]" name="takeScreenshotonFailure" is-config="true" duration-ms="0" started-at="2018-04-25T21:54:00Z" finished-at="2018-04-25T21:54:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test006_Verify_Creation_Of_User_Through_Frontend status=SUCCESS method=PoliticoStates_CMS_Create_Core_User_Tests.Test006_Verify_Creation_Of_User_Through_Frontend()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests@3a5ed7a6] output=
***** STARTING TEST: POLITICOSTATES_CMS_CREATE_CORE_USER_TESTS *****

Launching browser /chrome/ against starting URL: http://smoke-jenkins.ops.politico.com]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="stop_test_session()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests@3a5ed7a6]" name="stop_test_session" is-config="true" duration-ms="0" started-at="2018-04-25T21:54:00Z" finished-at="2018-04-25T21:54:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stop_test_session -->
      </class> <!-- com.qait.politico.states.tests.PoliticoStates_CMS_Create_Core_User_Tests -->
      <class name="com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests">
        <test-method status="PASS" signature="Start_Test_Session()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="Start_Test_Session" is-config="true" duration-ms="16756" started-at="2018-04-25T21:54:00Z" finished-at="2018-04-25T21:54:17Z">
          <reporter-output>
            <line>
              <![CDATA[Test running on local environment]]>
            </line>
            <line>
              <![CDATA[Platform - web
Browser - chrome]]>
            </line>
            <line>
              <![CDATA[Test running on chrome browser]]>
            </line>
            <line>
              <![CDATA[
***** STARTING TEST: POLITICOSTATES_CMS_ADD_USER_AND_LICENSE_TO_DIVISION_TESTS *****

Launching browser /chrome/ against starting URL: http://smoke-jenkins.ops.politico.com/cms]]>
            </line>
          </reporter-output>
        </test-method> <!-- Start_Test_Session -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:54:17Z" finished-at="2018-04-25T21:54:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests.Test001_Login()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST001_LOGIN *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="Test001_Login()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="Test001_Login" duration-ms="19259" started-at="2018-04-25T21:54:17Z" finished-at="2018-04-25T21:54:36Z">
          <reporter-output>
            <line>
              <![CDATA[  [info] root/root]]>
            </line>
            <line>
              <![CDATA[[PASSED] element inp_username is displayed.]]>
            </line>
            <line>
              <![CDATA[  [info] Entered CMS User credentials: root / root]]>
            </line>
            <line>
              <![CDATA[  [info] Clicked Login Button]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test001_Login -->
        <test-method status="PASS" signature="Test002_Switch_To_States_Site()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="Test002_Switch_To_States_Site" duration-ms="184" started-at="2018-04-25T21:54:36Z" finished-at="2018-04-25T21:54:37Z">
          <reporter-output>
            <line>
              <![CDATA[[PASSED] Successfully switched to site: States]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test002_Switch_To_States_Site -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:54:36Z" finished-at="2018-04-25T21:54:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests.Test002_Switch_To_States_Site()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST002_SWITCH_TO_STATES_SITE *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="takeScreenshotonFailure" is-config="true" duration-ms="0" started-at="2018-04-25T21:54:36Z" finished-at="2018-04-25T21:54:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test001_Login status=SUCCESS method=PoliticoStates_CMS_Add_User_And_License_To_Division_Tests.Test001_Login()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9] output=  [info] root/root]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:54:37Z" finished-at="2018-04-25T21:54:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests.Test003_Launch_AccountManagement_Window()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST003_LAUNCH_ACCOUNTMANAGEMENT_WINDOW *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="takeScreenshotonFailure" is-config="true" duration-ms="0" started-at="2018-04-25T21:54:37Z" finished-at="2018-04-25T21:54:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test002_Switch_To_States_Site status=SUCCESS method=PoliticoStates_CMS_Add_User_And_License_To_Division_Tests.Test002_Switch_To_States_Site()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9] output=[PASSED] Successfully switched to site: States]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="Test003_Launch_AccountManagement_Window()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="Test003_Launch_AccountManagement_Window" duration-ms="5774" started-at="2018-04-25T21:54:37Z" finished-at="2018-04-25T21:54:42Z">
          <reporter-output>
            <line>
              <![CDATA[  [info] No Javascript Alert was found]]>
            </line>
            <line>
              <![CDATA[  [info] No Javascript Alert was found]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test003_Launch_AccountManagement_Window -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="handleTestMethodName" is-config="true" duration-ms="1" started-at="2018-04-25T21:54:42Z" finished-at="2018-04-25T21:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests.Test004_Launch_Organization()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST004_LAUNCH_ORGANIZATION *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="takeScreenshotonFailure" is-config="true" duration-ms="0" started-at="2018-04-25T21:54:42Z" finished-at="2018-04-25T21:54:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test003_Launch_AccountManagement_Window status=SUCCESS method=PoliticoStates_CMS_Add_User_And_License_To_Division_Tests.Test003_Launch_AccountManagement_Window()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9] output=  [info] No Javascript Alert was found]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="Test004_Launch_Organization()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="Test004_Launch_Organization" duration-ms="10356" started-at="2018-04-25T21:54:42Z" finished-at="2018-04-25T21:54:53Z">
          <reporter-output>
            <line>
              <![CDATA[  [info]  Organization found and selected]]>
            </line>
            <line>
              <![CDATA[[PASSED] Organization launched successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test004_Launch_Organization -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:54:53Z" finished-at="2018-04-25T21:54:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests.Test005_Select_Division()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST005_SELECT_DIVISION *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="takeScreenshotonFailure" is-config="true" duration-ms="0" started-at="2018-04-25T21:54:53Z" finished-at="2018-04-25T21:54:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test004_Launch_Organization status=SUCCESS method=PoliticoStates_CMS_Add_User_And_License_To_Division_Tests.Test004_Launch_Organization()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9] output=  [info]  Organization found and selected]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="Test005_Select_Division()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="Test005_Select_Division" duration-ms="2991" started-at="2018-04-25T21:54:53Z" finished-at="2018-04-25T21:54:56Z">
          <reporter-output>
            <line>
              <![CDATA[[PASSED] Division found and selected]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test005_Select_Division -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="takeScreenshotonFailure" is-config="true" duration-ms="0" started-at="2018-04-25T21:54:56Z" finished-at="2018-04-25T21:54:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test005_Select_Division status=SUCCESS method=PoliticoStates_CMS_Add_User_And_License_To_Division_Tests.Test005_Select_Division()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9] output=[PASSED] Division found and selected]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:54:56Z" finished-at="2018-04-25T21:54:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests.Test006_Add_User_To_Division()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST006_ADD_USER_TO_DIVISION *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="Test006_Add_User_To_Division()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="Test006_Add_User_To_Division" duration-ms="15956" started-at="2018-04-25T21:54:56Z" finished-at="2018-04-25T21:55:12Z">
          <reporter-output>
            <line>
              <![CDATA[  [info] The User to be selected isTestUserWedApr25215152IST2018@yopmail.com]]>
            </line>
            <line>
              <![CDATA[  [info] Scrolled to top]]>
            </line>
            <line>
              <![CDATA[[PASSED] User successfully added to the organization division]]>
            </line>
            <line>
              <![CDATA[  [info] Scrolled to top]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test006_Add_User_To_Division -->
        <test-method status="PASS" signature="Test007_Add_Licenses_To_Division()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="Test007_Add_Licenses_To_Division" duration-ms="11666" started-at="2018-04-25T21:55:12Z" finished-at="2018-04-25T21:55:23Z">
          <reporter-output>
            <line>
              <![CDATA[  [info] Scrolled to top]]>
            </line>
            <line>
              <![CDATA[[PASSED] Pro licenses added successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test007_Add_Licenses_To_Division -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:55:12Z" finished-at="2018-04-25T21:55:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests.Test007_Add_Licenses_To_Division()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST007_ADD_LICENSES_TO_DIVISION *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="takeScreenshotonFailure" is-config="true" duration-ms="0" started-at="2018-04-25T21:55:12Z" finished-at="2018-04-25T21:55:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test006_Add_User_To_Division status=SUCCESS method=PoliticoStates_CMS_Add_User_And_License_To_Division_Tests.Test006_Add_User_To_Division()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9] output=  [info] The User to be selected isTestUserWedApr25215152IST2018@yopmail.com]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="Test009_Search_License()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="Test009_Search_License" duration-ms="3455" started-at="2018-04-25T21:55:23Z" finished-at="2018-04-25T21:55:27Z">
          <reporter-output>
            <line>
              <![CDATA[[PASSED] License searching successful]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test009_Search_License -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="takeScreenshotonFailure" is-config="true" duration-ms="0" started-at="2018-04-25T21:55:23Z" finished-at="2018-04-25T21:55:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test007_Add_Licenses_To_Division status=SUCCESS method=PoliticoStates_CMS_Add_User_And_License_To_Division_Tests.Test007_Add_Licenses_To_Division()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9] output=  [info] Scrolled to top]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:55:23Z" finished-at="2018-04-25T21:55:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests.Test009_Search_License()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST009_SEARCH_LICENSE *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="takeScreenshotonFailure" is-config="true" duration-ms="0" started-at="2018-04-25T21:55:27Z" finished-at="2018-04-25T21:55:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test009_Search_License status=SUCCESS method=PoliticoStates_CMS_Add_User_And_License_To_Division_Tests.Test009_Search_License()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9] output=[PASSED] License searching successful]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:55:27Z" finished-at="2018-04-25T21:55:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests.Test010_Assign_License_To_User()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST010_ASSIGN_LICENSE_TO_USER *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="Test010_Assign_License_To_User()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="Test010_Assign_License_To_User" duration-ms="2519" started-at="2018-04-25T21:55:27Z" finished-at="2018-04-25T21:55:29Z">
          <reporter-output>
            <line>
              <![CDATA[  [info] Scrolled to top]]>
            </line>
            <line>
              <![CDATA[  [info] Scrolled to top]]>
            </line>
            <line>
              <![CDATA[[PASSED] Licenses succussfully assigned to user]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test010_Assign_License_To_User -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="takeScreenshotonFailure" is-config="true" duration-ms="1" started-at="2018-04-25T21:55:29Z" finished-at="2018-04-25T21:55:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test010_Assign_License_To_User status=SUCCESS method=PoliticoStates_CMS_Add_User_And_License_To_Division_Tests.Test010_Assign_License_To_User()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9] output=  [info] Scrolled to top]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="stop_test_session()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests@23e028a9]" name="stop_test_session" is-config="true" duration-ms="0" started-at="2018-04-25T21:55:29Z" finished-at="2018-04-25T21:55:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stop_test_session -->
      </class> <!-- com.qait.politico.states.tests.PoliticoStates_CMS_Add_User_And_License_To_Division_Tests -->
    </test> <!-- State Account Managment Test -->
    <test name="States Whiteboard Test" duration-ms="252009" started-at="2018-04-25T16:21:52Z" finished-at="2018-04-25T16:26:04Z">
      <class name="com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests">
        <test-method status="PASS" signature="Start_Test_Session()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a]" name="Start_Test_Session" is-config="true" duration-ms="27306" started-at="2018-04-25T21:51:52Z" finished-at="2018-04-25T21:52:20Z">
          <reporter-output>
            <line>
              <![CDATA[Test running on local environment]]>
            </line>
            <line>
              <![CDATA[Platform - web
Browser - chrome]]>
            </line>
            <line>
              <![CDATA[Test running on chrome browser]]>
            </line>
            <line>
              <![CDATA[
***** STARTING TEST: POLITICOSTATES_CONTENT_WHITEBOARD_TESTS *****

Launching browser /chrome/ against starting URL: http://smoke-jenkins.ops.politico.com/cms]]>
            </line>
          </reporter-output>
        </test-method> <!-- Start_Test_Session -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a]" name="handleTestMethodName" is-config="true" duration-ms="4" started-at="2018-04-25T21:52:20Z" finished-at="2018-04-25T21:52:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests.Test001_Login()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST001_LOGIN *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="Test001_Login()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a]" name="Test001_Login" duration-ms="19695" started-at="2018-04-25T21:52:20Z" finished-at="2018-04-25T21:52:39Z">
          <reporter-output>
            <line>
              <![CDATA[  [info] root/root]]>
            </line>
            <line>
              <![CDATA[[PASSED] element inp_username is displayed.]]>
            </line>
            <line>
              <![CDATA[  [info] Entered CMS User credentials: root / root]]>
            </line>
            <line>
              <![CDATA[  [info] Clicked Login Button]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test001_Login -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a]" name="takeScreenshotonFailure" is-config="true" duration-ms="0" started-at="2018-04-25T21:52:39Z" finished-at="2018-04-25T21:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test001_Login status=SUCCESS method=PoliticoStates_Content_Whiteboard_Tests.Test001_Login()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a] output=  [info] root/root]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="Test002_Launch_Whiteboard_Creation_Window()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a]" name="Test002_Launch_Whiteboard_Creation_Window" duration-ms="8131" started-at="2018-04-25T21:52:39Z" finished-at="2018-04-25T21:52:48Z">
          <reporter-output>
            <line>
              <![CDATA[[PASSED] Successfully switched to site: States]]>
            </line>
            <line>
              <![CDATA[[PASSED] element link_ContentType with text 'Whiteboard' is displayed.]]>
            </line>
            <line>
              <![CDATA[  [info] Launched the 'WHITEBOARD' Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test002_Launch_Whiteboard_Creation_Window -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:52:39Z" finished-at="2018-04-25T21:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests.Test002_Launch_Whiteboard_Creation_Window()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST002_LAUNCH_WHITEBOARD_CREATION_WINDOW *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a]" name="takeScreenshotonFailure" is-config="true" duration-ms="1" started-at="2018-04-25T21:52:48Z" finished-at="2018-04-25T21:52:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test002_Launch_Whiteboard_Creation_Window status=SUCCESS method=PoliticoStates_Content_Whiteboard_Tests.Test002_Launch_Whiteboard_Creation_Window()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a] output=[PASSED] Successfully switched to site: States]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="Test005_Creating_Whiteboard()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a]" name="Test005_Creating_Whiteboard" duration-ms="49044" started-at="2018-04-25T21:52:48Z" finished-at="2018-04-25T21:53:37Z">
          <reporter-output>
            <line>
              <![CDATA[  [info] Scrolled to top]]>
            </line>
            <line>
              <![CDATA[[PASSED] Clicked MAIN tab !!]]>
            </line>
            <line>
              <![CDATA[  [info] Entered Headline !!]]>
            </line>
            <line>
              <![CDATA[[PASSED] Contributor is successfully selected]]>
            </line>
            <line>
              <![CDATA[[PASSED] Selected New Jersey as the Policy Vertical]]>
            </line>
            <line>
              <![CDATA[  [info] Added Local Tag to the Tag Page !!]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test005_Creating_Whiteboard -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:52:48Z" finished-at="2018-04-25T21:52:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests.Test005_Creating_Whiteboard()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST005_CREATING_WHITEBOARD *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:53:37Z" finished-at="2018-04-25T21:53:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests.Test006_Save_Before_Publish_Whiteboard()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST006_SAVE_BEFORE_PUBLISH_WHITEBOARD *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="Test006_Save_Before_Publish_Whiteboard()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a]" name="Test006_Save_Before_Publish_Whiteboard" duration-ms="14970" started-at="2018-04-25T21:53:37Z" finished-at="2018-04-25T21:53:52Z">
          <reporter-output>
            <line>
              <![CDATA[[PASSED] Successfully saved draft]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test006_Save_Before_Publish_Whiteboard -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a]" name="takeScreenshotonFailure" is-config="true" duration-ms="0" started-at="2018-04-25T21:53:37Z" finished-at="2018-04-25T21:53:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test005_Creating_Whiteboard status=SUCCESS method=PoliticoStates_Content_Whiteboard_Tests.Test005_Creating_Whiteboard()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a] output=  [info] Scrolled to top]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a]" name="takeScreenshotonFailure" is-config="true" duration-ms="4" started-at="2018-04-25T21:53:52Z" finished-at="2018-04-25T21:53:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test006_Save_Before_Publish_Whiteboard status=SUCCESS method=PoliticoStates_Content_Whiteboard_Tests.Test006_Save_Before_Publish_Whiteboard()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a] output=[PASSED] Successfully saved draft]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="Test007_Publish_Whiteboard()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a]" name="Test007_Publish_Whiteboard" duration-ms="16858" started-at="2018-04-25T21:53:52Z" finished-at="2018-04-25T21:54:08Z">
          <reporter-output>
            <line>
              <![CDATA[  [info] Scrolled to top]]>
            </line>
            <line>
              <![CDATA[  [info] Clicked on Publish Tab]]>
            </line>
            <line>
              <![CDATA[  [info] Scrolled to top]]>
            </line>
            <line>
              <![CDATA[  [info] Clicked Publish button !!]]>
            </line>
            <line>
              <![CDATA[[PASSED] Published the Content !!]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test007_Publish_Whiteboard -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:53:52Z" finished-at="2018-04-25T21:53:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests.Test007_Publish_Whiteboard()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST007_PUBLISH_WHITEBOARD *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a]" name="handleTestMethodName" is-config="true" duration-ms="4" started-at="2018-04-25T21:54:08Z" finished-at="2018-04-25T21:54:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests.Test011_Verifying_PermaLink_After_Creating_And_Publishing_Whiteboard()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST011_VERIFYING_PERMALINK_AFTER_CREATING_AND_PUBLISHING_WHITEBOARD *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a]" name="takeScreenshotonFailure" is-config="true" duration-ms="0" started-at="2018-04-25T21:54:08Z" finished-at="2018-04-25T21:54:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test007_Publish_Whiteboard status=SUCCESS method=PoliticoStates_Content_Whiteboard_Tests.Test007_Publish_Whiteboard()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a] output=  [info] Scrolled to top]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="Test011_Verifying_PermaLink_After_Creating_And_Publishing_Whiteboard()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a]" name="Test011_Verifying_PermaLink_After_Creating_And_Publishing_Whiteboard" duration-ms="84996" started-at="2018-04-25T21:54:08Z" finished-at="2018-04-25T21:55:33Z">
          <reporter-output>
            <line>
              <![CDATA[  [info] Scrolled to top]]>
            </line>
            <line>
              <![CDATA[[PASSED] Clicked MAIN tab !!]]>
            </line>
            <line>
              <![CDATA[[PASSED] Contributor is successfully selected]]>
            </line>
            <line>
              <![CDATA[[PASSED] Selected New Jersey as the Policy Vertical]]>
            </line>
            <line>
              <![CDATA[  [info] Scrolled to top]]>
            </line>
            <line>
              <![CDATA[  [info] Clicked on Publish Tab]]>
            </line>
            <line>
              <![CDATA[  [info] Scrolled to top]]>
            </line>
            <line>
              <![CDATA[  [info] Clicked Publish button !!]]>
            </line>
            <line>
              <![CDATA[[PASSED] Published the Content !!]]>
            </line>
            <line>
              <![CDATA[  [info] Scrolled to top]]>
            </line>
            <line>
              <![CDATA[  [info] After switching windows, new window title: smoke-jenkins.ops.politico.com]]>
            </line>
            <line>
              <![CDATA[[PASSED] PermaLink generated successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test011_Verifying_PermaLink_After_Creating_And_Publishing_Whiteboard -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a]" name="takeScreenshotonFailure" is-config="true" duration-ms="0" started-at="2018-04-25T21:55:33Z" finished-at="2018-04-25T21:55:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test011_Verifying_PermaLink_After_Creating_And_Publishing_Whiteboard status=SUCCESS method=PoliticoStates_Content_Whiteboard_Tests.Test011_Verifying_PermaLink_After_Creating_And_Publishing_Whiteboard()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a] output=  [info] Scrolled to top]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:55:33Z" finished-at="2018-04-25T21:55:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests.Test012_Verifying_PermaLink_Launch_Redirect_Correctly()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST012_VERIFYING_PERMALINK_LAUNCH_REDIRECT_CORRECTLY *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="FAIL" signature="Test012_Verifying_PermaLink_Launch_Redirect_Correctly()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a]" name="Test012_Verifying_PermaLink_Launch_Redirect_Correctly" duration-ms="30076" started-at="2018-04-25T21:55:33Z" finished-at="2018-04-25T21:56:04Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[FAILED: Element login_link_new not found on the PoliticoProFrontEndUserLoginActions !!!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: FAILED: Element login_link_new not found on the PoliticoProFrontEndUserLoginActions !!!
	at org.testng.Assert.fail(Assert.java:94)
	at com.qait.automation.getpageobjects.GetPage.element(GetPage.java:105)
	at com.qait.automation.getpageobjects.GetPage.element(GetPage.java:80)
	at com.qait.automation.getpageobjects.GetPage.isElementDisplayed(GetPage.java:231)
	at com.qait.automation.keywords.PoliticoPro_FrontEnd_UserLogin_Actions.click_LogIn_link(PoliticoPro_FrontEnd_UserLogin_Actions.java:57)
	at com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests.Test012_Verifying_PermaLink_Launch_Redirect_Correctly(PoliticoStates_Content_Whiteboard_Tests.java:123)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:37)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:368)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test012_Verifying_PermaLink_Launch_Redirect_Correctly -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a]" name="takeScreenshotonFailure" is-config="true" duration-ms="886" started-at="2018-04-25T21:56:04Z" finished-at="2018-04-25T21:56:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test012_Verifying_PermaLink_Launch_Redirect_Correctly status=FAILURE method=PoliticoStates_Content_Whiteboard_Tests.Test012_Verifying_PermaLink_Launch_Redirect_Correctly()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ [INFO] Saving screenshot to D:\POLITICO\2017_automationscripts\./target/screenshots/\PoliticoStates_Content_Whiteboard_Tests\2018_04_25_09_56_PM\screenshot.png]]>
            </line>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="stop_test_session()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests@4bbfb90a]" name="stop_test_session" is-config="true" duration-ms="0" started-at="2018-04-25T21:56:04Z" finished-at="2018-04-25T21:56:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stop_test_session -->
      </class> <!-- com.qait.politico.states.tests.PoliticoStates_Content_Whiteboard_Tests -->
    </test> <!-- States Whiteboard Test -->
    <test name="States Newsletter Test" duration-ms="265308" started-at="2018-04-25T16:21:52Z" finished-at="2018-04-25T16:26:18Z">
      <class name="com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry">
        <test-method status="PASS" signature="Start_Test_Session()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067]" name="Start_Test_Session" is-config="true" duration-ms="22006" started-at="2018-04-25T21:51:52Z" finished-at="2018-04-25T21:52:14Z">
          <reporter-output>
            <line>
              <![CDATA[Test running on local environment]]>
            </line>
            <line>
              <![CDATA[Platform - web
Browser - chrome]]>
            </line>
            <line>
              <![CDATA[Test running on chrome browser]]>
            </line>
            <line>
              <![CDATA[
***** STARTING TEST: POLITICOSTATES_CONTENT_NEWSLETTER_ENTRY *****

Launching browser /chrome/ against starting URL: http://smoke-jenkins.ops.politico.com/cms]]>
            </line>
          </reporter-output>
        </test-method> <!-- Start_Test_Session -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:52:14Z" finished-at="2018-04-25T21:52:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry.Test001_Login()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST001_LOGIN *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="Test001_Login()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067]" name="Test001_Login" duration-ms="18959" started-at="2018-04-25T21:52:14Z" finished-at="2018-04-25T21:52:33Z">
          <reporter-output>
            <line>
              <![CDATA[  [info] root/root]]>
            </line>
            <line>
              <![CDATA[[PASSED] element inp_username is displayed.]]>
            </line>
            <line>
              <![CDATA[  [info] Entered CMS User credentials: root / root]]>
            </line>
            <line>
              <![CDATA[  [info] Clicked Login Button]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test001_Login -->
        <test-method status="PASS" signature="Test002_Launch_Newsletter_Entry_Creation_Window()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067]" name="Test002_Launch_Newsletter_Entry_Creation_Window" duration-ms="8073" started-at="2018-04-25T21:52:33Z" finished-at="2018-04-25T21:52:41Z">
          <reporter-output>
            <line>
              <![CDATA[[PASSED] Successfully switched to site: States]]>
            </line>
            <line>
              <![CDATA[[PASSED] element link_ContentType with text 'Newsletter Entry' is displayed.]]>
            </line>
            <line>
              <![CDATA[  [info] Launched the 'NEWSLETTER ENTRY' Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test002_Launch_Newsletter_Entry_Creation_Window -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067]" name="takeScreenshotonFailure" is-config="true" duration-ms="0" started-at="2018-04-25T21:52:33Z" finished-at="2018-04-25T21:52:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test001_Login status=SUCCESS method=PoliticoStates_Content_Newsletter_Entry.Test001_Login()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067] output=  [info] root/root]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:52:33Z" finished-at="2018-04-25T21:52:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry.Test002_Launch_Newsletter_Entry_Creation_Window()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST002_LAUNCH_NEWSLETTER_ENTRY_CREATION_WINDOW *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="Test005_Creating_Newsletter_Entry()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067]" name="Test005_Creating_Newsletter_Entry" duration-ms="54714" started-at="2018-04-25T21:52:41Z" finished-at="2018-04-25T21:53:36Z">
          <reporter-output>
            <line>
              <![CDATA[  [info] Entered Headline !!]]>
            </line>
            <line>
              <![CDATA[[PASSED] Newsletter is selected successfully !!]]>
            </line>
            <line>
              <![CDATA[[PASSED] Contributor is successfully selected]]>
            </line>
            <line>
              <![CDATA[[PASSED] Selected New Jersey as the Policy Vertical]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test005_Creating_Newsletter_Entry -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:52:41Z" finished-at="2018-04-25T21:52:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry.Test005_Creating_Newsletter_Entry()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST005_CREATING_NEWSLETTER_ENTRY *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067]" name="takeScreenshotonFailure" is-config="true" duration-ms="0" started-at="2018-04-25T21:52:41Z" finished-at="2018-04-25T21:52:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test002_Launch_Newsletter_Entry_Creation_Window status=SUCCESS method=PoliticoStates_Content_Newsletter_Entry.Test002_Launch_Newsletter_Entry_Creation_Window()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067] output=[PASSED] Successfully switched to site: States]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:53:36Z" finished-at="2018-04-25T21:53:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry.Test006_Save_Before_Publish_Newsletter_Entry()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST006_SAVE_BEFORE_PUBLISH_NEWSLETTER_ENTRY *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067]" name="takeScreenshotonFailure" is-config="true" duration-ms="0" started-at="2018-04-25T21:53:36Z" finished-at="2018-04-25T21:53:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test005_Creating_Newsletter_Entry status=SUCCESS method=PoliticoStates_Content_Newsletter_Entry.Test005_Creating_Newsletter_Entry()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067] output=  [info] Entered Headline !!]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="Test006_Save_Before_Publish_Newsletter_Entry()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067]" name="Test006_Save_Before_Publish_Newsletter_Entry" duration-ms="17101" started-at="2018-04-25T21:53:36Z" finished-at="2018-04-25T21:53:53Z">
          <reporter-output>
            <line>
              <![CDATA[[PASSED] Successfully saved draft]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test006_Save_Before_Publish_Newsletter_Entry -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:53:53Z" finished-at="2018-04-25T21:53:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry.Test007_Publish_Newsletter_Entry()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST007_PUBLISH_NEWSLETTER_ENTRY *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067]" name="takeScreenshotonFailure" is-config="true" duration-ms="0" started-at="2018-04-25T21:53:53Z" finished-at="2018-04-25T21:53:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test006_Save_Before_Publish_Newsletter_Entry status=SUCCESS method=PoliticoStates_Content_Newsletter_Entry.Test006_Save_Before_Publish_Newsletter_Entry()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067] output=[PASSED] Successfully saved draft]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="Test007_Publish_Newsletter_Entry()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067]" name="Test007_Publish_Newsletter_Entry" duration-ms="18706" started-at="2018-04-25T21:53:53Z" finished-at="2018-04-25T21:54:12Z">
          <reporter-output>
            <line>
              <![CDATA[  [info] Scrolled to top]]>
            </line>
            <line>
              <![CDATA[  [info] Clicked on Publish Tab]]>
            </line>
            <line>
              <![CDATA[  [info] Scrolled to top]]>
            </line>
            <line>
              <![CDATA[  [info] Clicked Publish button !!]]>
            </line>
            <line>
              <![CDATA[[PASSED] Published the Content !!]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test007_Publish_Newsletter_Entry -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067]" name="takeScreenshotonFailure" is-config="true" duration-ms="0" started-at="2018-04-25T21:54:12Z" finished-at="2018-04-25T21:54:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test007_Publish_Newsletter_Entry status=SUCCESS method=PoliticoStates_Content_Newsletter_Entry.Test007_Publish_Newsletter_Entry()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067] output=  [info] Scrolled to top]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="Test012_Verifying_PermaLink_After_Creating_And_Publishing_Newsletter_Entry()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067]" name="Test012_Verifying_PermaLink_After_Creating_And_Publishing_Newsletter_Entry" duration-ms="95380" started-at="2018-04-25T21:54:12Z" finished-at="2018-04-25T21:55:47Z">
          <reporter-output>
            <line>
              <![CDATA[[PASSED] element link_ContentType with text 'Newsletter Entry' is displayed.]]>
            </line>
            <line>
              <![CDATA[  [info] Launched the 'NEWSLETTER ENTRY' Page]]>
            </line>
            <line>
              <![CDATA[  [info] Scrolled to top]]>
            </line>
            <line>
              <![CDATA[  [info] Clicked on Publish Tab]]>
            </line>
            <line>
              <![CDATA[  [info] Entered Headline !!]]>
            </line>
            <line>
              <![CDATA[[PASSED] Newsletter is selected successfully !!]]>
            </line>
            <line>
              <![CDATA[  [info] Scrolled to top]]>
            </line>
            <line>
              <![CDATA[[PASSED] Contributor is successfully selected]]>
            </line>
            <line>
              <![CDATA[[PASSED] Selected New Jersey as the Policy Vertical]]>
            </line>
            <line>
              <![CDATA[  [info] Scrolled to top]]>
            </line>
            <line>
              <![CDATA[  [info] Clicked Publish button !!]]>
            </line>
            <line>
              <![CDATA[[PASSED] Published the Content !!]]>
            </line>
            <line>
              <![CDATA[  [info] Scrolled to top]]>
            </line>
            <line>
              <![CDATA[  [info] After switching windows, new window title: smoke-jenkins.ops.politico.com]]>
            </line>
            <line>
              <![CDATA[[PASSED] PermaLink generated successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test012_Verifying_PermaLink_After_Creating_And_Publishing_Newsletter_Entry -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:54:12Z" finished-at="2018-04-25T21:54:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry.Test012_Verifying_PermaLink_After_Creating_And_Publishing_Newsletter_Entry()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST012_VERIFYING_PERMALINK_AFTER_CREATING_AND_PUBLISHING_NEWSLETTER_ENTRY *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067]" name="takeScreenshotonFailure" is-config="true" duration-ms="0" started-at="2018-04-25T21:55:47Z" finished-at="2018-04-25T21:55:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test012_Verifying_PermaLink_After_Creating_And_Publishing_Newsletter_Entry status=SUCCESS method=PoliticoStates_Content_Newsletter_Entry.Test012_Verifying_PermaLink_After_Creating_And_Publishing_Newsletter_Entry()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067] output=[PASSED] element link_ContentType with text 'Newsletter Entry' is displayed.]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="FAIL" signature="Test013_Verifying_PermaLink_Launch_Redirect_Correctly()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067]" name="Test013_Verifying_PermaLink_Launch_Redirect_Correctly" duration-ms="30022" started-at="2018-04-25T21:55:47Z" finished-at="2018-04-25T21:56:17Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[FAILED: Element login_link_new not found on the PoliticoProFrontEndUserLoginActions !!!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: FAILED: Element login_link_new not found on the PoliticoProFrontEndUserLoginActions !!!
	at org.testng.Assert.fail(Assert.java:94)
	at com.qait.automation.getpageobjects.GetPage.element(GetPage.java:105)
	at com.qait.automation.getpageobjects.GetPage.element(GetPage.java:80)
	at com.qait.automation.getpageobjects.GetPage.isElementDisplayed(GetPage.java:231)
	at com.qait.automation.keywords.PoliticoPro_FrontEnd_UserLogin_Actions.click_LogIn_link(PoliticoPro_FrontEnd_UserLogin_Actions.java:57)
	at com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry.Test013_Verifying_PermaLink_Launch_Redirect_Correctly(PoliticoStates_Content_Newsletter_Entry.java:151)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:37)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:368)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test013_Verifying_PermaLink_Launch_Redirect_Correctly -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:55:47Z" finished-at="2018-04-25T21:55:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry.Test013_Verifying_PermaLink_Launch_Redirect_Correctly()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST013_VERIFYING_PERMALINK_LAUNCH_REDIRECT_CORRECTLY *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067]" name="takeScreenshotonFailure" is-config="true" duration-ms="318" started-at="2018-04-25T21:56:17Z" finished-at="2018-04-25T21:56:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test013_Verifying_PermaLink_Launch_Redirect_Correctly status=FAILURE method=PoliticoStates_Content_Newsletter_Entry.Test013_Verifying_PermaLink_Launch_Redirect_Correctly()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ [INFO] Saving screenshot to D:\POLITICO\2017_automationscripts\./target/screenshots/\PoliticoStates_Content_Newsletter_Entry\2018_04_25_09_56_PM\screenshot.png]]>
            </line>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="stop_test_session()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry@5d76b067]" name="stop_test_session" is-config="true" duration-ms="0" started-at="2018-04-25T21:56:18Z" finished-at="2018-04-25T21:56:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stop_test_session -->
      </class> <!-- com.qait.politico.states.tests.PoliticoStates_Content_Newsletter_Entry -->
    </test> <!-- States Newsletter Test -->
    <test name="States Article Creation" duration-ms="284175" started-at="2018-04-25T16:21:52Z" finished-at="2018-04-25T16:26:37Z">
      <class name="com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests">
        <test-method status="PASS" signature="Start_Test_Session()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799]" name="Start_Test_Session" is-config="true" duration-ms="27784" started-at="2018-04-25T21:51:52Z" finished-at="2018-04-25T21:52:20Z">
          <reporter-output>
            <line>
              <![CDATA[Test running on local environment]]>
            </line>
            <line>
              <![CDATA[Platform - web
Browser - chrome]]>
            </line>
            <line>
              <![CDATA[Test running on chrome browser]]>
            </line>
            <line>
              <![CDATA[
***** STARTING TEST: POLITICOSTATES_CONTENT_ARTICLE_TESTS *****

Launching browser /chrome/ against starting URL: http://smoke-jenkins.ops.politico.com/cms]]>
            </line>
          </reporter-output>
        </test-method> <!-- Start_Test_Session -->
        <test-method status="PASS" signature="Test001_Login()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799]" name="Test001_Login" duration-ms="19947" started-at="2018-04-25T21:52:20Z" finished-at="2018-04-25T21:52:40Z">
          <reporter-output>
            <line>
              <![CDATA[  [info] root/root]]>
            </line>
            <line>
              <![CDATA[[PASSED] element inp_username is displayed.]]>
            </line>
            <line>
              <![CDATA[  [info] Entered CMS User credentials: root / root]]>
            </line>
            <line>
              <![CDATA[  [info] Clicked Login Button]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test001_Login -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:52:20Z" finished-at="2018-04-25T21:52:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests.Test001_Login()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST001_LOGIN *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="Test002_Launch_Article_Creation_Window()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799]" name="Test002_Launch_Article_Creation_Window" duration-ms="11196" started-at="2018-04-25T21:52:40Z" finished-at="2018-04-25T21:52:51Z">
          <reporter-output>
            <line>
              <![CDATA[[PASSED] Successfully switched to site: States]]>
            </line>
            <line>
              <![CDATA[[PASSED] element link_ContentType with text 'Article' is displayed.]]>
            </line>
            <line>
              <![CDATA[  [info] Launched the 'ARTICLE' Page]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test002_Launch_Article_Creation_Window -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799]" name="takeScreenshotonFailure" is-config="true" duration-ms="0" started-at="2018-04-25T21:52:40Z" finished-at="2018-04-25T21:52:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test001_Login status=SUCCESS method=PoliticoStates_Content_Article_Tests.Test001_Login()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799] output=  [info] root/root]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:52:40Z" finished-at="2018-04-25T21:52:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests.Test002_Launch_Article_Creation_Window()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST002_LAUNCH_ARTICLE_CREATION_WINDOW *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799]" name="takeScreenshotonFailure" is-config="true" duration-ms="1" started-at="2018-04-25T21:52:51Z" finished-at="2018-04-25T21:52:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test002_Launch_Article_Creation_Window status=SUCCESS method=PoliticoStates_Content_Article_Tests.Test002_Launch_Article_Creation_Window()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799] output=[PASSED] Successfully switched to site: States]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:52:51Z" finished-at="2018-04-25T21:52:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests.Test005_Creating_And_Publishing_Article()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST005_CREATING_AND_PUBLISHING_ARTICLE *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="Test005_Creating_And_Publishing_Article()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799]" name="Test005_Creating_And_Publishing_Article" duration-ms="60640" started-at="2018-04-25T21:52:51Z" finished-at="2018-04-25T21:53:52Z">
          <reporter-output>
            <line>
              <![CDATA[  [info] No Javascript Alert was found]]>
            </line>
            <line>
              <![CDATA[  [info] Scrolled to top]]>
            </line>
            <line>
              <![CDATA[[PASSED] Clicked MAIN tab !!]]>
            </line>
            <line>
              <![CDATA[[PASSED] Contributor is successfully selected]]>
            </line>
            <line>
              <![CDATA[[PASSED] Selected New Jersey as the Policy Vertical]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test005_Creating_And_Publishing_Article -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799]" name="takeScreenshotonFailure" is-config="true" duration-ms="0" started-at="2018-04-25T21:53:52Z" finished-at="2018-04-25T21:53:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test005_Creating_And_Publishing_Article status=SUCCESS method=PoliticoStates_Content_Article_Tests.Test005_Creating_And_Publishing_Article()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799] output=  [info] No Javascript Alert was found]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="Test006_Save_Before_Publish_Article()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799]" name="Test006_Save_Before_Publish_Article" duration-ms="23351" started-at="2018-04-25T21:53:52Z" finished-at="2018-04-25T21:54:15Z">
          <reporter-output>
            <line>
              <![CDATA[  [info] Scrolled to top]]>
            </line>
            <line>
              <![CDATA[[PASSED] Clicked MAIN tab !!]]>
            </line>
            <line>
              <![CDATA[[PASSED] Successfully saved draft]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test006_Save_Before_Publish_Article -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:53:52Z" finished-at="2018-04-25T21:53:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests.Test006_Save_Before_Publish_Article()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST006_SAVE_BEFORE_PUBLISH_ARTICLE *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799]" name="takeScreenshotonFailure" is-config="true" duration-ms="0" started-at="2018-04-25T21:54:15Z" finished-at="2018-04-25T21:54:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test006_Save_Before_Publish_Article status=SUCCESS method=PoliticoStates_Content_Article_Tests.Test006_Save_Before_Publish_Article()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799] output=  [info] Scrolled to top]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="Test007_Publish_Article()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799]" name="Test007_Publish_Article" duration-ms="18913" started-at="2018-04-25T21:54:15Z" finished-at="2018-04-25T21:54:34Z">
          <reporter-output>
            <line>
              <![CDATA[  [info] Scrolled to top]]>
            </line>
            <line>
              <![CDATA[  [info] Clicked on Publish Tab]]>
            </line>
            <line>
              <![CDATA[  [info] Scrolled to top]]>
            </line>
            <line>
              <![CDATA[  [info] Clicked Publish button !!]]>
            </line>
            <line>
              <![CDATA[[PASSED] Published the Content !!]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test007_Publish_Article -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:54:15Z" finished-at="2018-04-25T21:54:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests.Test007_Publish_Article()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST007_PUBLISH_ARTICLE *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:54:34Z" finished-at="2018-04-25T21:54:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests.Test012_Verifying_PermaLink_After_Creating_And_Publishing_Article()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST012_VERIFYING_PERMALINK_AFTER_CREATING_AND_PUBLISHING_ARTICLE *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799]" name="takeScreenshotonFailure" is-config="true" duration-ms="0" started-at="2018-04-25T21:54:34Z" finished-at="2018-04-25T21:54:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test007_Publish_Article status=SUCCESS method=PoliticoStates_Content_Article_Tests.Test007_Publish_Article()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799] output=  [info] Scrolled to top]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="Test012_Verifying_PermaLink_After_Creating_And_Publishing_Article()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799]" name="Test012_Verifying_PermaLink_After_Creating_And_Publishing_Article" duration-ms="91849" started-at="2018-04-25T21:54:34Z" finished-at="2018-04-25T21:56:06Z">
          <reporter-output>
            <line>
              <![CDATA[  [info] Scrolled to top]]>
            </line>
            <line>
              <![CDATA[[PASSED] Clicked MAIN tab !!]]>
            </line>
            <line>
              <![CDATA[[PASSED] Contributor is successfully selected]]>
            </line>
            <line>
              <![CDATA[[PASSED] Selected New Jersey as the Policy Vertical]]>
            </line>
            <line>
              <![CDATA[  [info] Scrolled to top]]>
            </line>
            <line>
              <![CDATA[  [info] Clicked on Publish Tab]]>
            </line>
            <line>
              <![CDATA[  [info] Scrolled to top]]>
            </line>
            <line>
              <![CDATA[  [info] Clicked Publish button !!]]>
            </line>
            <line>
              <![CDATA[[PASSED] Published the Content !!]]>
            </line>
            <line>
              <![CDATA[  [info] Scrolled to top]]>
            </line>
            <line>
              <![CDATA[  [info] After switching windows, new window title: smoke-jenkins.ops.politico.com]]>
            </line>
            <line>
              <![CDATA[[PASSED] PermaLink generated successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test012_Verifying_PermaLink_After_Creating_And_Publishing_Article -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799]" name="takeScreenshotonFailure" is-config="true" duration-ms="0" started-at="2018-04-25T21:56:06Z" finished-at="2018-04-25T21:56:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test012_Verifying_PermaLink_After_Creating_And_Publishing_Article status=SUCCESS method=PoliticoStates_Content_Article_Tests.Test012_Verifying_PermaLink_After_Creating_And_Publishing_Article()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799] output=  [info] Scrolled to top]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:56:06Z" finished-at="2018-04-25T21:56:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests.Test013_Verifying_PermaLink_Launch_Redirect_Correctly()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST013_VERIFYING_PERMALINK_LAUNCH_REDIRECT_CORRECTLY *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="FAIL" signature="Test013_Verifying_PermaLink_Launch_Redirect_Correctly()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799]" name="Test013_Verifying_PermaLink_Launch_Redirect_Correctly" duration-ms="30040" started-at="2018-04-25T21:56:06Z" finished-at="2018-04-25T21:56:36Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[FAILED: Element login_link_new not found on the PoliticoProFrontEndUserLoginActions !!!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: FAILED: Element login_link_new not found on the PoliticoProFrontEndUserLoginActions !!!
	at org.testng.Assert.fail(Assert.java:94)
	at com.qait.automation.getpageobjects.GetPage.element(GetPage.java:105)
	at com.qait.automation.getpageobjects.GetPage.element(GetPage.java:80)
	at com.qait.automation.getpageobjects.GetPage.isElementDisplayed(GetPage.java:231)
	at com.qait.automation.keywords.PoliticoPro_FrontEnd_UserLogin_Actions.click_LogIn_link(PoliticoPro_FrontEnd_UserLogin_Actions.java:57)
	at com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests.Test013_Verifying_PermaLink_Launch_Redirect_Correctly(PoliticoStates_Content_Article_Tests.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:37)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:368)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test013_Verifying_PermaLink_Launch_Redirect_Correctly -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799]" name="takeScreenshotonFailure" is-config="true" duration-ms="417" started-at="2018-04-25T21:56:36Z" finished-at="2018-04-25T21:56:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test013_Verifying_PermaLink_Launch_Redirect_Correctly status=FAILURE method=PoliticoStates_Content_Article_Tests.Test013_Verifying_PermaLink_Launch_Redirect_Correctly()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ [INFO] Saving screenshot to D:\POLITICO\2017_automationscripts\./target/screenshots/\PoliticoStates_Content_Article_Tests\2018_04_25_09_56_PM\screenshot.png]]>
            </line>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="stop_test_session()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests@1c3a4799]" name="stop_test_session" is-config="true" duration-ms="0" started-at="2018-04-25T21:56:37Z" finished-at="2018-04-25T21:56:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stop_test_session -->
      </class> <!-- com.qait.politico.states.tests.PoliticoStates_Content_Article_Tests -->
    </test> <!-- States Article Creation -->
    <test name="States Newsletter SignUp" duration-ms="91684" started-at="2018-04-25T16:25:29Z" finished-at="2018-04-25T16:27:01Z">
      <class name="com.qait.politico.states.tests.PoliticoStates_NewsletterSignUpForCoreUser">
        <test-method status="PASS" signature="Start_Test_Session()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_NewsletterSignUpForCoreUser@184f6be2]" name="Start_Test_Session" is-config="true" duration-ms="38535" started-at="2018-04-25T21:55:29Z" finished-at="2018-04-25T21:56:08Z">
          <reporter-output>
            <line>
              <![CDATA[Test running on local environment]]>
            </line>
            <line>
              <![CDATA[Platform - web
Browser - chrome]]>
            </line>
            <line>
              <![CDATA[Test running on chrome browser]]>
            </line>
            <line>
              <![CDATA[
***** STARTING TEST: POLITICOSTATES_NEWSLETTERSIGNUPFORCOREUSER *****

Launching browser /chrome/ against starting URL: http://smoke-jenkins.ops.politico.com/cms]]>
            </line>
          </reporter-output>
        </test-method> <!-- Start_Test_Session -->
        <test-method status="PASS" signature="Test01_LoginIntoCMS()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_NewsletterSignUpForCoreUser@184f6be2]" name="Test01_LoginIntoCMS" duration-ms="38601" started-at="2018-04-25T21:56:08Z" finished-at="2018-04-25T21:56:46Z">
          <reporter-output>
            <line>
              <![CDATA[  [info] root/root]]>
            </line>
            <line>
              <![CDATA[[PASSED] element inp_username is displayed.]]>
            </line>
            <line>
              <![CDATA[  [info] Entered CMS User credentials: root / root]]>
            </line>
            <line>
              <![CDATA[  [info] Clicked Login Button]]>
            </line>
            <line>
              <![CDATA[[PASSED] Successfully switched to site: States]]>
            </line>
            <line>
              <![CDATA[  [info] No Javascript Alert was found]]>
            </line>
            <line>
              <![CDATA[  [info] Created User AutomationUser06250420180951@yopmail.com]]>
            </line>
            <line>
              <![CDATA[  [info] Scrolled to top]]>
            </line>
            <line>
              <![CDATA[[PASSED] element archive is displayed.]]>
            </line>
            <line>
              <![CDATA[[PASSED] Core user created successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test01_LoginIntoCMS -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_NewsletterSignUpForCoreUser@184f6be2]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:56:08Z" finished-at="2018-04-25T21:56:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_NewsletterSignUpForCoreUser.Test01_LoginIntoCMS()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST01_LOGININTOCMS *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_NewsletterSignUpForCoreUser@184f6be2]" name="takeScreenshotonFailure" is-config="true" duration-ms="1" started-at="2018-04-25T21:56:46Z" finished-at="2018-04-25T21:56:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test01_LoginIntoCMS status=SUCCESS method=PoliticoStates_NewsletterSignUpForCoreUser.Test01_LoginIntoCMS()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_NewsletterSignUpForCoreUser@184f6be2] output=  [info] root/root]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="FAIL" signature="Test02_Verify_NewsletterLanding_And_EnhancesSignUp_On_FE()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_NewsletterSignUpForCoreUser@184f6be2]" name="Test02_Verify_NewsletterLanding_And_EnhancesSignUp_On_FE" duration-ms="8427" started-at="2018-04-25T21:56:46Z" finished-at="2018-04-25T21:56:55Z">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:32132
Build info: version: '3.10.0', revision: '176b4a9', time: '2018-03-02T19:03:16.397Z'
System info: host: 'DLLA1439', ip: '10.90.0.51', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_161'
Driver info: driver.version: RemoteWebDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:32132
Build info: version: '3.10.0', revision: '176b4a9', time: '2018-03-02T19:03:16.397Z'
System info: host: 'DLLA1439', ip: '10.90.0.51', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_161'
Driver info: driver.version: RemoteWebDriver
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:92)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)
	at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:325)
	at com.qait.automation.TestSessionInitiator.openUrl(TestSessionInitiator.java:398)
	at com.qait.politico.states.tests.PoliticoStates_NewsletterSignUpForCoreUser.Test02_Verify_NewsletterLanding_And_EnhancesSignUp_On_FE(PoliticoStates_NewsletterSignUpForCoreUser.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:37)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:368)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:32132
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:240)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:158)
	at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:256)
	at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:134)
	at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:113)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:125)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
	at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)
	at okhttp3.RealCall.execute(RealCall.java:77)
	at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:101)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:157)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	... 24 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.doConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connect(Unknown Source)
	at java.net.PlainSocketImpl.connect(Unknown Source)
	at java.net.SocksSocketImpl.connect(Unknown Source)
	at java.net.Socket.connect(Unknown Source)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.java:125)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:238)
	... 44 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test02_Verify_NewsletterLanding_And_EnhancesSignUp_On_FE -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_NewsletterSignUpForCoreUser@184f6be2]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:56:46Z" finished-at="2018-04-25T21:56:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_NewsletterSignUpForCoreUser.Test02_Verify_NewsletterLanding_And_EnhancesSignUp_On_FE()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST02_VERIFY_NEWSLETTERLANDING_AND_ENHANCESSIGNUP_ON_FE *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_NewsletterSignUpForCoreUser@184f6be2]" name="takeScreenshotonFailure" is-config="true" duration-ms="2071" started-at="2018-04-25T21:56:55Z" finished-at="2018-04-25T21:56:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test02_Verify_NewsletterLanding_And_EnhancesSignUp_On_FE status=FAILURE method=PoliticoStates_NewsletterSignUpForCoreUser.Test02_Verify_NewsletterLanding_And_EnhancesSignUp_On_FE()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_NewsletterSignUpForCoreUser@184f6be2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Driver is null while taking screen shot]]>
            </line>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_NewsletterSignUpForCoreUser@184f6be2]" name="handleTestMethodName" is-config="true" duration-ms="1" started-at="2018-04-25T21:56:57Z" finished-at="2018-04-25T21:56:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_NewsletterSignUpForCoreUser.Test05_Verify_SignUp_For_Verified_EmailAddress()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST05_VERIFY_SIGNUP_FOR_VERIFIED_EMAILADDRESS *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="FAIL" signature="Test05_Verify_SignUp_For_Verified_EmailAddress()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_NewsletterSignUpForCoreUser@184f6be2]" name="Test05_Verify_SignUp_For_Verified_EmailAddress" duration-ms="2011" started-at="2018-04-25T21:56:57Z" finished-at="2018-04-25T21:56:59Z">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:32132
Build info: version: '3.10.0', revision: '176b4a9', time: '2018-03-02T19:03:16.397Z'
System info: host: 'DLLA1439', ip: '10.90.0.51', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_161'
Driver info: driver.version: RemoteWebDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:32132
Build info: version: '3.10.0', revision: '176b4a9', time: '2018-03-02T19:03:16.397Z'
System info: host: 'DLLA1439', ip: '10.90.0.51', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_161'
Driver info: driver.version: RemoteWebDriver
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:92)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:658)
	at org.openqa.selenium.remote.RemoteWebDriver$RemoteNavigation.refresh(RemoteWebDriver.java:920)
	at com.qait.automation.getpageobjects.BaseUi.refreshWindow(BaseUi.java:739)
	at com.qait.automation.keywords.Create_Pro_User_Actions.refreshPage(Create_Pro_User_Actions.java:558)
	at com.qait.politico.states.tests.PoliticoStates_NewsletterSignUpForCoreUser.Test05_Verify_SignUp_For_Verified_EmailAddress(PoliticoStates_NewsletterSignUpForCoreUser.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:37)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:368)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:32132
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:240)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:158)
	at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:256)
	at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:134)
	at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:113)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:125)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
	at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)
	at okhttp3.RealCall.execute(RealCall.java:77)
	at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:101)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:157)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	... 26 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.doConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connect(Unknown Source)
	at java.net.PlainSocketImpl.connect(Unknown Source)
	at java.net.SocksSocketImpl.connect(Unknown Source)
	at java.net.Socket.connect(Unknown Source)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.java:125)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:238)
	... 46 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test05_Verify_SignUp_For_Verified_EmailAddress -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_NewsletterSignUpForCoreUser@184f6be2]" name="takeScreenshotonFailure" is-config="true" duration-ms="2018" started-at="2018-04-25T21:56:59Z" finished-at="2018-04-25T21:57:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test05_Verify_SignUp_For_Verified_EmailAddress status=FAILURE method=PoliticoStates_NewsletterSignUpForCoreUser.Test05_Verify_SignUp_For_Verified_EmailAddress()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_NewsletterSignUpForCoreUser@184f6be2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Driver is null while taking screen shot]]>
            </line>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="stop_test_session()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_NewsletterSignUpForCoreUser@184f6be2]" name="stop_test_session" is-config="true" duration-ms="0" started-at="2018-04-25T21:57:01Z" finished-at="2018-04-25T21:57:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stop_test_session -->
      </class> <!-- com.qait.politico.states.tests.PoliticoStates_NewsletterSignUpForCoreUser -->
    </test> <!-- States Newsletter SignUp -->
    <test name="States FE ShortCuts verification" duration-ms="171030" started-at="2018-04-25T16:25:16Z" finished-at="2018-04-25T16:28:07Z">
      <class name="com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test">
        <test-method status="PASS" signature="Start_Test_Session()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test@d44fc21]" name="Start_Test_Session" is-config="true" duration-ms="40122" started-at="2018-04-25T21:55:16Z" finished-at="2018-04-25T21:55:56Z">
          <reporter-output>
            <line>
              <![CDATA[Test running on local environment]]>
            </line>
            <line>
              <![CDATA[Platform - web
Browser - chrome]]>
            </line>
            <line>
              <![CDATA[Test running on chrome browser]]>
            </line>
            <line>
              <![CDATA[
***** STARTING TEST: POLITICOSTATES_SHORTCUTS_TEST *****

Launching browser /chrome/ against starting URL: http://pro-smoke-jenkins.ops.politico.com/?fm=t]]>
            </line>
          </reporter-output>
        </test-method> <!-- Start_Test_Session -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test@d44fc21]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:55:56Z" finished-at="2018-04-25T21:55:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test.Test001_PoliticoPro_ClickOnLoginNavigatesToPoliticoProLandingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST001_POLITICOPRO_CLICKONLOGINNAVIGATESTOPOLITICOPROLANDINGPAGE *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="Test001_PoliticoPro_ClickOnLoginNavigatesToPoliticoProLandingPage()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test@d44fc21]" name="Test001_PoliticoPro_ClickOnLoginNavigatesToPoliticoProLandingPage" duration-ms="63835" started-at="2018-04-25T21:55:56Z" finished-at="2018-04-25T21:57:00Z">
          <reporter-output>
            <line>
              <![CDATA[  [info] User is already on Pro Login Page !!]]>
            </line>
            <line>
              <![CDATA[Entered Email 'qatest_states@politico.com' !! ]]>
            </line>
            <line>
              <![CDATA[Entered Password '123456' !! ]]>
            </line>
            <line>
              <![CDATA[Clicked Submit button successfully !!]]>
            </line>
            <line>
              <![CDATA[[PASSED] element text_loggedProUser_Name is displayed.]]>
            </line>
            <line>
              <![CDATA[[PASSED]: User has successfully logged into Politico Pro !! ]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test001_PoliticoPro_ClickOnLoginNavigatesToPoliticoProLandingPage -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test@d44fc21]" name="takeScreenshotonFailure" is-config="true" duration-ms="1" started-at="2018-04-25T21:57:00Z" finished-at="2018-04-25T21:57:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test001_PoliticoPro_ClickOnLoginNavigatesToPoliticoProLandingPage status=SUCCESS method=PoliticoStates_ShortCuts_Test.Test001_PoliticoPro_ClickOnLoginNavigatesToPoliticoProLandingPage()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test@d44fc21] output=  [info] User is already on Pro Login Page !!]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test@d44fc21]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:57:00Z" finished-at="2018-04-25T21:57:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test.Test002_Verify_Shorcuts_Is_Present()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST002_VERIFY_SHORCUTS_IS_PRESENT *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="FAIL" signature="Test002_Verify_Shorcuts_Is_Present()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test@d44fc21]" name="Test002_Verify_Shorcuts_Is_Present" duration-ms="3288" started-at="2018-04-25T21:57:00Z" finished-at="2018-04-25T21:57:03Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[[ASSERT FAILED]: Shortcuts heading is not present expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: [ASSERT FAILED]: Shortcuts heading is not present expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at com.qait.automation.keywords.PoliticoPro_LandingPage_Actions.VerifyShortcutHeaderOnPro(PoliticoPro_LandingPage_Actions.java:1636)
	at com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test.Test002_Verify_Shorcuts_Is_Present(PoliticoStates_ShortCuts_Test.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:37)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:368)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[[PASSED] element shortcut_header is displayed.]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test002_Verify_Shorcuts_Is_Present -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test@d44fc21]" name="takeScreenshotonFailure" is-config="true" duration-ms="492" started-at="2018-04-25T21:57:03Z" finished-at="2018-04-25T21:57:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test002_Verify_Shorcuts_Is_Present status=FAILURE method=PoliticoStates_ShortCuts_Test.Test002_Verify_Shorcuts_Is_Present()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test@d44fc21] output=[PASSED] element shortcut_header is displayed.]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ [INFO] Saving screenshot to D:\POLITICO\2017_automationscripts\./target/screenshots/\PoliticoStates_ShortCuts_Test\2018_04_25_09_57_PM\screenshot.png]]>
            </line>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test@d44fc21]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:57:04Z" finished-at="2018-04-25T21:57:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test.Test003_Verify_User_Can_Add_Shortcuts()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST003_VERIFY_USER_CAN_ADD_SHORTCUTS *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="FAIL" signature="Test003_Verify_User_Can_Add_Shortcuts()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test@d44fc21]" name="Test003_Verify_User_Can_Add_Shortcuts" duration-ms="32045" started-at="2018-04-25T21:57:04Z" finished-at="2018-04-25T21:57:36Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[FAILED: Element menu_items_in_hamburger not found on the PoliticoProLandingPageActions !!!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: FAILED: Element menu_items_in_hamburger not found on the PoliticoProLandingPageActions !!!
	at org.testng.Assert.fail(Assert.java:94)
	at com.qait.automation.getpageobjects.GetPage.element(GetPage.java:105)
	at com.qait.automation.keywords.PoliticoPro_LandingPage_Actions.AddShortcutsOnPro(PoliticoPro_LandingPage_Actions.java:1666)
	at com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test.Test003_Verify_User_Can_Add_Shortcuts(PoliticoStates_ShortCuts_Test.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:37)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:368)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[[PASSED] Hamburger is in edit mode for adding shortcuts.]]>
            </line>
          </reporter-output>
        </test-method> <!-- Test003_Verify_User_Can_Add_Shortcuts -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test@d44fc21]" name="takeScreenshotonFailure" is-config="true" duration-ms="459" started-at="2018-04-25T21:57:36Z" finished-at="2018-04-25T21:57:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test003_Verify_User_Can_Add_Shortcuts status=FAILURE method=PoliticoStates_ShortCuts_Test.Test003_Verify_User_Can_Add_Shortcuts()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test@d44fc21] output=[PASSED] Hamburger is in edit mode for adding shortcuts.]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ [INFO] Saving screenshot to D:\POLITICO\2017_automationscripts\./target/screenshots/\PoliticoStates_ShortCuts_Test\2018_04_25_09_57_PM\screenshot.png]]>
            </line>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test@d44fc21]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-04-25T21:57:36Z" finished-at="2018-04-25T21:57:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test.Test005_Verify_Removing_Of_Shortcuts()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP: TEST005_VERIFY_REMOVING_OF_SHORTCUTS *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="FAIL" signature="Test005_Verify_Removing_Of_Shortcuts()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test@d44fc21]" name="Test005_Verify_Removing_Of_Shortcuts" duration-ms="30212" started-at="2018-04-25T21:57:36Z" finished-at="2018-04-25T21:58:07Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[FAILED: Element myShortcutsItems not found on the PoliticoProLandingPageActions !!!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: FAILED: Element myShortcutsItems not found on the PoliticoProLandingPageActions !!!
	at org.testng.Assert.fail(Assert.java:94)
	at com.qait.automation.getpageobjects.GetPage.element(GetPage.java:105)
	at com.qait.automation.keywords.PoliticoPro_LandingPage_Actions.RemoveShortcutsFromHeader(PoliticoPro_LandingPage_Actions.java:1697)
	at com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test.Test005_Verify_Removing_Of_Shortcuts(PoliticoStates_ShortCuts_Test.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:37)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:368)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test005_Verify_Removing_Of_Shortcuts -->
        <test-method status="PASS" signature="takeScreenshotonFailure(org.testng.ITestResult)[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test@d44fc21]" name="takeScreenshotonFailure" is-config="true" duration-ms="558" started-at="2018-04-25T21:58:07Z" finished-at="2018-04-25T21:58:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test005_Verify_Removing_Of_Shortcuts status=FAILURE method=PoliticoStates_ShortCuts_Test.Test005_Verify_Removing_Of_Shortcuts()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test@d44fc21] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ [INFO] Saving screenshot to D:\POLITICO\2017_automationscripts\./target/screenshots/\PoliticoStates_ShortCuts_Test\2018_04_25_09_58_PM\screenshot.png]]>
            </line>
          </reporter-output>
        </test-method> <!-- takeScreenshotonFailure -->
        <test-method status="PASS" signature="stop_test_session()[pri:0, instance:com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test@d44fc21]" name="stop_test_session" is-config="true" duration-ms="0" started-at="2018-04-25T21:58:07Z" finished-at="2018-04-25T21:58:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stop_test_session -->
      </class> <!-- com.qait.politico.states.tests.PoliticoStates_ShortCuts_Test -->
    </test> <!-- States FE ShortCuts verification -->
  </suite> <!-- Politico States Smoke Test Suite -->
</testng-results>
